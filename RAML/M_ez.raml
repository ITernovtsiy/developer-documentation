#%RAML 1.0
---
title: eZ Platform (Test)
baseUri: http://localhost/
version: 2.4

/bookmark:
    get:
        queryParameters:
            offset:
                description: the offset of the result set. Default value is 0
                type: integer
            limit:
                description: the number of bookmarks returned. Default value is 25
                type: integer
        headers:
            Accept:
                description: if set the list is returned in XML or JSON format
                example:  |
                    application/vnd.ez.api.BookmarkList+xml
                    application/vnd.ez.api.BookmarkList+json
        responses:
            200:
                body:
                    application/vnd.ez.api.BookmarkList+xml:
                        example: |
                            <?xml version="1.0" encoding="UTF-8"?>
                                <BookmarkList media-type="application/vnd.ez.api.BookmarkList+xml">
                                    <count>1</count>
                                    <Bookmark media-type="application/vnd.ez.api.Bookmark+xml" _href="/api/ezp/v2/bookmark/2">
                                        <Location media-type="application/vnd.ez.api.Location+xml" href="/api/ezp/v2/content/locations/1/2">
                                            <id>2</id>
                                            <priority>0</priority>
                                            <hidden>false</hidden>
                                            <invisible>false</invisible>
                                            <ParentLocation media-type="application/vnd.ez.api.Location+xml" href="/api/ezp/v2/content/locations/1"/>
                                            <pathString>/1/2/</pathString>
                                            <depth>1</depth>
                                            <childCount>4</childCount>
                                            <remoteId>f3e90596361e31d496d4026eb624c983</remoteId>
                                            <Children media-type="application/vnd.ez.api.LocationList+xml" href="/api/ezp/v2/content/locations/1/2/children"/>
                                            <Content media-type="application/vnd.ez.api.Content+xml" href="/api/ezp/v2/content/objects/1"/>
                                            <sortField>PRIORITY</sortField>
                                            <sortOrder>ASC</sortOrder>
                                            <UrlAliases media-type="application/vnd.ez.api.UrlAliasRefList+xml" href="/api/ezp/v2/content/locations/1/2/urlaliases"/>
                                            <ContentInfo media-type="application/vnd.ez.api.ContentInfo+xml" href="/api/ezp/v2/content/objects/1">
                                                <Content media-type="application/vnd.ez.api.ContentInfo+xml" href="/api/ezp/v2/content/objects/1" remoteId="9459d3c29e15006e45197295722c7ade" id="1">
                                                    <ContentType media-type="application/vnd.ez.api.ContentType+xml" href="/api/ezp/v2/content/types/1"/>
                                                    <Name>eZ Platform</Name>
                                                    <Versions media-type="application/vnd.ez.api.VersionList+xml" href="/api/ezp/v2/content/objects/1/versions"/>
                                                    <CurrentVersion media-type="application/vnd.ez.api.Version+xml" href="/api/ezp/v2/content/objects/1/currentversion"/>
                                                    <Section media-type="application/vnd.ez.api.Section+xml" href="/api/ezp/v2/content/sections/1"/>
                                                    <Locations media-type="application/vnd.ez.api.LocationList+xml" href="/api/ezp/v2/content/objects/1/locations"/>
                                                    <Owner media-type="application/vnd.ez.api.User+xml" href="/api/ezp/v2/user/users/14"/>
                                                    <lastModificationDate>2015-11-30T13:10:46+00:00</lastModificationDate>
                                                    <publishedDate>2015-11-30T13:10:46+00:00</publishedDate>
                                                    <mainLanguageCode>eng-GB</mainLanguageCode>
                                                    <currentVersionNo>9</currentVersionNo>
                                                    <alwaysAvailable>true</alwaysAvailable>
                                                    <ObjectStates media-type="application/vnd.ez.api.ContentObjectStates+xml" href="/api/ezp/v2/content/objects/1/objectstates"/>
                                                </Content>
                                            </ContentInfo>
                                        </Location>
                                    </Bookmark>
                                </BookmarkList>
                    application/vnd.ez.api.BookmarkList+json:
                        example: |
                            {
                                "BookmarkList": {
                                    "_media-type": "application/vnd.ez.api.BookmarkList+json",
                                    "count": 1,
                                    "items": [
                                        {
                                            "_media-type": "application/vnd.ez.api.Bookmark+json",
                                            "__href": "/api/ezp/v2/bookmark/2",
                                            "Location": {
                                                "_media-type": "application/vnd.ez.api.Location+json",
                                                "_href": "/api/ezp/v2/content/locations/1/2",
                                                "id": 2,
                                                "priority": 0,
                                                "hidden": false,
                                                "invisible": false,
                                                "ParentLocation": {
                                                    "_media-type": "application/vnd.ez.api.Location+json",
                                                    "_href": "/api/ezp/v2/content/locations/1"
                                                },
                                                "pathString": "/1/2/",
                                                "depth": 1,
                                                "childCount": 4,
                                                "remoteId": "f3e90596361e31d496d4026eb624c983",
                                                "Children": {
                                                    "_media-type": "application/vnd.ez.api.LocationList+json",
                                                    "_href": "/api/ezp/v2/content/locations/1/2/children"
                                                },
                                                "Content": {
                                                    "_media-type": "application/vnd.ez.api.Content+json",
                                                    "_href": "/api/ezp/v2/content/objects/1"
                                                },
                                                "sortField": "PRIORITY",
                                                "sortOrder": "ASC",
                                                "UrlAliases": {
                                                    "_media-type": "application/vnd.ez.api.UrlAliasRefList+json",
                                                    "_href": "/api/ezp/v2/content/locations/1/2/urlaliases"
                                                },
                                                "ContentInfo": {
                                                    "_media-type": "application/vnd.ez.api.ContentInfo+json",
                                                    "_href": "/api/ezp/v2/content/objects/1",
                                                    "Content": {
                                                        "_media-type": "application/vnd.ez.api.ContentInfo+json",
                                                        "_href": "/api/ezp/v2/content/objects/1",
                                                        "_remoteId": "9459d3c29e15006e45197295722c7ade",
                                                        "_id": 1,
                                                        "ContentType": {
                                                            "_media-type": "application/vnd.ez.api.ContentType+json",
                                                            "_href": "/api/ezp/v2/content/types/1"
                                                        },
                                                        "Name": "eZ Platform",
                                                        "Versions": {
                                                            "_media-type": "application/vnd.ez.api.VersionList+json",
                                                            "_href": "/api/ezp/v2/content/objects/1/versions"
                                                        },
                                                        "CurrentVersion": {
                                                            "_media-type": "application/vnd.ez.api.Version+json",
                                                            "_href": "/api/ezp/v2/content/objects/1/currentversion"
                                                        },
                                                        "Section": {
                                                            "_media-type": "application/vnd.ez.api.Section+json",
                                                            "_href": "/api/ezp/v2/content/sections/1"
                                                        },
                                                        "Locations": {
                                                            "_media-type": "application/vnd.ez.api.LocationList+json",
                                                            "_href": "/api/ezp/v2/content/objects/1/locations"
                                                        },
                                                        "Owner": {
                                                            "_media-type": "application/vnd.ez.api.User+json",
                                                            "_href": "/api/ezp/v2/user/users/14"
                                                        },
                                                        "lastModificationDate": "2015-11-30T13:10:46+00:00",
                                                        "publishedDate": "2015-11-30T13:10:46+00:00",
                                                        "mainLanguageCode": "eng-GB",
                                                        "currentVersionNo": 9,
                                                        "alwaysAvailable": true,
                                                        "ObjectStates": {
                                                            "_media-type": "application/vnd.ez.api.ContentObjectStates+json",
                                                            "_href": "/api/ezp/v2/content/objects/1/objectstates"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }

            401:
                description: Error - the user is not authorized to list bookmarks
    /{locationId}:
        post:
            description: Add given location to bookmarks of current user
            responses:
                201:
                    description: Created
                401:
                    description: Error - the user is not authorized to given location
                404:
                    description: Error - a given location not exists
                409:
                    description: Error - location is already bookmarked
        head:
            description: Check if given location is bookmarked by current user
            responses:
                200:
                    description: OK - bookmarked
                401:
                    description: Error - the user is not authorized to given location
                404:
                    description: Error - a given location not exists / is not bookmarked
        delete:
            description: Delete given location from bookmarks of current user
            responses:
                204:
                    description: Deleted - no content
                401:
                    description: Error - the user is not authorized to given location
                404:
                    description: Error - a given location not exists / is not bookmarked
/content:
    get:
        description: List the root resources of the eZ Platform installation.
        headers:
            Accept:
                description: if set the list is return in xml or json format
                example:  |
                    application/vnd.ez.api.Root+xml
                    application/vnd.ez.api.Root+json
        responses:
            200:
                body:
                    application/vnd.ez.api.Root+xml:
                        example: |
                            <?xml version="1.0" encoding="UTF-8"?>
                            <Root media-type="application/vnd.ez.api.Root+xml">
                                <content media-type="" href="/api/ezp/v2/content/objects"/>
                                <contentByRemoteId media-type="" href="/api/ezp/v2/content/objects{?remoteId}"/>
                                <contentTypes media-type="application/vnd.ez.api.ContentTypeInfoList+xml" href="/api/ezp/v2/content/types"/>
                                <contentTypeByIdentifier media-type="" href="/api/ezp/v2/content/types{?identifier}"/>
                                <contentTypeGroups media-type="application/vnd.ez.api.ContentTypeGroupList+xml" href="/api/ezp/v2/content/typegroups"/>
                                <contentTypeGroupByIdentifier media-type="" href="/api/ezp/v2/content/typegroups{?identifier}"/>
                                <users media-type="application/vnd.ez.api.UserRefList+xml" href="/api/ezp/v2/user/users"/>
                                <roles media-type="application/vnd.ez.api.RoleList+xml" href="/api/ezp/v2/user/roles"/>
                                <rootLocation media-type="application/vnd.ez.api.Location+xml" href="/api/ezp/v2/content/locations/1/2"/>
                                <rootUserGroup media-type="application/vnd.ez.api.UserGroup+xml" href="/api/ezp/v2/user/groups/1/5"/>
                                <rootMediaFolder media-type="application/vnd.ez.api.Location+xml" href="/api/ezp/v2/content/locations/1/43"/>
                                <locationByRemoteId media-type="" href="/api/ezp/v2/content/locations{?remoteId}"/>
                                <locationByPath media-type="" href="/api/ezp/v2/content/locations{?locationPath}"/>
                                <trash media-type="application/vnd.ez.api.Trash+xml" href="/api/ezp/v2/content/trash"/>
                                <sections media-type="application/vnd.ez.api.SectionList+xml" href="/api/ezp/v2/content/sections"/>
                                <views media-type="application/vnd.ez.api.RefList+xml" href="/api/ezp/v2/views"/>
                                <objectStateGroups media-type="application/vnd.ez.api.ObjectStateGroupList+xml" href="/api/ezp/v2/content/objectstategroups"/>
                                <objectStates media-type="application/vnd.ez.api.ObjectStateList+xml" href="/api/ezp/v2/content/objectstategroups/{objectStateGroupId}/objectstates"/>
                                <globalUrlAliases media-type="application/vnd.ez.api.UrlAliasRefList+xml" href="/api/ezp/v2/content/urlaliases"/>
                                <urlWildcards media-type="application/vnd.ez.api.UrlWildcardList+xml" href="/api/ezp/v2/content/urlwildcards"/>
                                <createSession media-type="application/vnd.ez.api.UserSession+xml" href="/api/ezp/v2/user/sessions"/>
                                <refreshSession media-type="application/vnd.ez.api.UserSession+xml" href="/api/ezp/v2/user/sessions/{sessionId}/refresh"/>
                            </Root>
                    application/vnd.ez.api.Root+json:
                        example: |
                            {
                                "Root": {
                                    "_media-type": "application/vnd.ez.api.Root+json",
                                    "content": {
                                        "_href": "/api/ezp/v2/content/objects",
                                        "_media-type": ""
                                    },
                                    "contentByRemoteId": {
                                        "_href": "/api/ezp/v2/content/objects{?remoteId}",
                                        "_media-type": ""
                                    },
                                    "contentTypeByIdentifier": {
                                        "_href": "/api/ezp/v2/content/types{?identifier}",
                                        "_media-type": ""
                                    },
                                    "contentTypeGroupByIdentifier": {
                                        "_href": "/api/ezp/v2/content/typegroups{?identifier}",
                                        "_media-type": ""
                                    },
                                    "contentTypeGroups": {
                                        "_href": "/api/ezp/v2/content/typegroups",
                                        "_media-type": "application/vnd.ez.api.ContentTypeGroupList+json"
                                    },
                                    "contentTypes": {
                                        "_href": "/api/ezp/v2/content/types",
                                        "_media-type": "application/vnd.ez.api.ContentTypeInfoList+json"
                                    },
                                    "createSession": {
                                        "_href": "/api/ezp/v2/user/sessions",
                                        "_media-type": "application/vnd.ez.api.UserSession+json"
                                    },
                                    "globalUrlAliases": {
                                        "_href": "/api/ezp/v2/content/urlaliases",
                                        "_media-type": "application/vnd.ez.api.UrlAliasRefList+json"
                                    },
                                    "locationByPath": {
                                        "_href": "/api/ezp/v2/content/locations{?locationPath}",
                                        "_media-type": ""
                                    },
                                    "locationByRemoteId": {
                                        "_href": "/api/ezp/v2/content/locations{?remoteId}",
                                        "_media-type": ""
                                    },
                                    "objectStateGroups": {
                                        "_href": "/api/ezp/v2/content/objectstategroups",
                                        "_media-type": "application/vnd.ez.api.ObjectStateGroupList+json"
                                    },
                                    "objectStates": {
                                        "_href": "/api/ezp/v2/content/objectstategroups/{objectStateGroupId}/objectstates",
                                        "_media-type": "application/vnd.ez.api.ObjectStateList+json"
                                    },
                                    "roles": {
                                        "_href": "/api/ezp/v2/user/roles",
                                        "_media-type": "application/vnd.ez.api.RoleList+json"
                                    },
                                    "rootLocation": {
                                        "_href": "/api/ezp/v2/content/locations/1/2",
                                        "_media-type": "application/vnd.ez.api.Location+json"
                                    },
                                    "rootMediaFolder": {
                                        "_href": "/api/ezp/v2/content/locations/1/43",
                                        "_media-type": "application/vnd.ez.api.Location+json"
                                    },
                                    "rootUserGroup": {
                                        "_href": "/api/ezp/v2/user/groups/1/5",
                                        "_media-type": "application/vnd.ez.api.UserGroup+json"
                                    },
                                    "sections": {
                                        "_href": "/api/ezp/v2/content/sections",
                                        "_media-type": "application/vnd.ez.api.SectionList+json"
                                    },
                                    "trash": {
                                        "_href": "/api/ezp/v2/content/trash",
                                        "_media-type": "application/vnd.ez.api.Trash+json"
                                    },
                                    "urlWildcards": {
                                        "_href": "/api/ezp/v2/content/urlwildcards",
                                        "_media-type": "application/vnd.ez.api.UrlWildcardList+json"
                                    },
                                    "users": {
                                        "_href": "/api/ezp/v2/user/users",
                                        "_media-type": "application/vnd.ez.api.UserRefList+json"
                                    },
                                    "views": {
                                        "_href": "/api/ezp/v2/views",
                                        "_media-type": "application/vnd.ez.api.RefList+json"
                                    },
                                    "refreshSession": {
                                        "_media-type": "application\/vnd.ez.api.UserSession+json",
                                        "_href": "\/api\/ezp\/v2\/user\/sessions\/{sessionId}\/refresh"
                                    }
                                }
                            }
    /objects:
        post:
            description: Creates a new content draft assigned to the authenticated user. If a different userId is given in the input it is assigned to the given user but this required special rights for the authenticated user (this is useful for content staging where the transfer process does not have to authenticate with the user which created the content object in the source server). The user has to publish the content if it should be visible.
            headers:
                Accept:
                    description: Content - if set all informations for the content object including the embedded current version are returned in xml or json format. ContentInfo - if set all informations for the content object (excluding the current version) are returned in xml or json format
                    example:  |
                        application/vnd.ez.api.Content+xml
                        application/vnd.ez.api.Content+json
                        application/vnd.ez.api.ContentInfo+xml
                        application/vnd.ez.api.ContentInfo+json
                Content-Type:
                    description: the ContentCreate schema encoded in xml or json
                    example:  |
                        application/vnd.ez.api.ContentCreate+xml
                        application/vnd.ez.api.ContentCreate+json
            body:
                application/vnd.ez.api.Content+xml:
                    schema: |
                    example:  |
                        <ContentCreate xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                          <ContentType href="/content/types/10"/>
                          <mainLanguageCode>eng-US</mainLanguageCode>
                          <LocationCreate>
                            <ParentLocation href="/content/locations/1/4/89" />
                            <priority>0</priority>
                            <hidden>false</hidden>
                            <sortField>PATH</sortField>
                            <sortOrder>ASC</sortOrder>
                          </LocationCreate>
                          <Section href="/content/sections/4"/>
                          <alwaysAvailable>true</alwaysAvailable>
                          <remoteId>remoteId12345678</remoteId>
                          <fields>
                            <field>
                              <fieldDefinitionIdentifier>title</fieldDefinitionIdentifier>
                              <languageCode>eng-US</languageCode>
                              <fieldValue>This is a title</fieldValue>
                            </field>
                            <field>
                              <fieldDefinitionIdentifier>summary</fieldDefinitionIdentifier>
                              <languageCode>eng-US</languageCode>
                              <fieldValue>This is a summary</fieldValue>
                            </field>
                            <field>
                              <fieldDefinitionIdentifier>authors</fieldDefinitionIdentifier>
                              <languageCode>eng-US</languageCode>
                              <fieldValue>
                                <value>
                                  <value key="name">John Doe</value>
                                  <value key="email">john.doe@example.net</value>
                                </value>
                                <value>
                                  <value key="name">Bruce Willis</value>
                                  <value key="email">bruce.willis@example.net</value>
                                </value>
                              </fieldValue>
                            </field>
                          </fields>
                        </ContentCreate>
                application/vnd.ez.api.Content+json:
                    schema: |
                    example:  |
                        {
                          "ContentCreate": {
                            "ContentType": {
                              "_href": "/content/types/10"
                            },
                            "mainLanguageCode": "eng-US",
                            "LocationCreate": {
                              "ParentLocation": {
                                "_href": "/content/locations/1/4/89"
                              },
                              "priority": "0",
                              "hidden": false,
                              "sortField": "PATH",
                              "sortOrder": "ASC"
                            },
                            "Section": {
                              "_href": "/content/sections/4"
                            },
                            "alwaysAvailable": true,
                            "remoteId": "remoteId12345678",
                            "fields": {
                              "field": [
                                {
                                  "fieldDefinitionIdentifier": "title",
                                  "languageCode": "eng-US",
                                  "fieldValue": "This is a title"
                                },
                                {
                                  "fieldDefinitionIdentifier": "summary",
                                  "languageCode": "eng-US",
                                  "fieldValue": "This is a summary"
                                },
                                {
                                  "fieldDefinitionIdentifier": "authors",
                                  "languageCode": "eng-US",
                                  "fieldValue": [
                                     {
                                       "name": "John Doe",
                                       "email": "john.doe@example.net"
                                     },
                                     {
                                       "name": "Bruce Willis",
                                       "email": "bruce.willis@example.net"
                                     }
                                  ]
                                }
                              ]
                            }
                          }
                        }
            responses:
                201:
                    body:
                        application/vnd.ez.api.Content+xml:
                            example: |
                                <?xml version="1.0" encoding="UTF-8"?>
                                <Content href="/content/objects/23" id="23"
                                  media-type="application/vnd.ez.api.Content+xml" remoteId="remoteId12345678" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                                  <ContentType href="/content/types/10" media-type="application/vnd.ez.api.ContentType+xml" />
                                  <Name>This is a title</Name>
                                  <Versions href="/content/objects/23/versions" media-type="application/vnd.ez.api.VersionList+xml" />
                                  <CurrentVersion href="/content/objects/23/currentversion"
                                    media-type="application/vnd.ez.api.Version+xml">
                                    <Version href="/content/objects/23/versions/1" media-type="application/vnd.ez.api.Version+xml">
                                      <VersionInfo>
                                        <id>123</id>
                                        <versionNo>1</versionNo>
                                        <status>DRAFT</status>
                                        <modificationDate>2012-02-12T12:30:00</modificationDate>
                                        <Creator href="/user/users/14" media-type="application/vnd.ez.api.User+xml" />
                                        <creationDate>2012-02-12T12:30:00</creationDate>
                                        <initialLanguageCode>eng-US</initialLanguageCode>
                                        <Content href="/content/objects/23" media-type="application/vnd.ez.api.ContentInfo+xml" />
                                      </VersionInfo>
                                      <fields>
                                        <field>
                                          <id>1234</id>
                                          <fieldDefinitionIdentifier>title</fieldDefinitionIdentifier>
                                          <languageCode>eng-UK</languageCode>
                                          <fieldValue>This is a title</fieldValue>
                                        </field>
                                        <field>
                                          <id>1235</id>
                                          <fieldDefinitionIdentifier>summary</fieldDefinitionIdentifier>
                                          <languageCode>eng-UK</languageCode>
                                          <fieldValue>This is a summary</fieldValue>
                                        </field>
                                        <field>
                                          <fieldDefinitionIdentifier>authors</fieldDefinitionIdentifier>
                                          <languageCode>eng-US</languageCode>
                                          <fieldValue>
                                            <value>
                                              <value key="name">John Doe</value>
                                              <value key="email">john.doe@example.net</value>
                                            </value>
                                            <value>
                                              <value key="name">Bruce Willis</value>
                                              <value key="email">bruce.willis@example.net</value>
                                            </value>
                                          </fieldValue>
                                        </field>
                                      </fields>
                                      <Relations href="/content/objects/23/versions/1/relations" media-type="application/vnd.ez.api.RelationList+xml" />
                                    </Version>
                                  </CurrentVersion>
                                  <Section href="/content/sections/4" media-type="application/vnd.ez.api.Section+xml" />
                                  <MainLocation href="/content/locations/1/4/65" media-type="application/vnd.ez.api.Location+xml" />
                                  <Locations href="/content/objects/23/locations" media-type="application/vnd.ez.api.LocationList+xml" />
                                  <Owner href="/user/users/14" media-type="application/vnd.ez.api.User+xml" />
                                  <lastModificationDate>2012-02-12T12:30:00</lastModificationDate>
                                  <mainLanguageCode>eng-US</mainLanguageCode>
                                  <currentVersionNo>1</currentVersionNo>
                                  <alwaysAvailable>true</alwaysAvailable>
                                </Content>
                        application/vnd.ez.api.Content+json:
                            example: |
                                {
                                  "Content": {
                                    "_href": "/content/objects/23",
                                    "_id": "23",
                                    "_media-type": "application/vnd.ez.api.Content+json",
                                    "_remoteId": "qwert123",
                                    "ContentType": {
                                      "_href": "/content/types/10",
                                      "_media-type": "application/vnd.ez.api.ContentType+json"
                                    },
                                    "name": "This is a title",
                                    "Versions": {
                                      "_href": "/content/objects/23/versions",
                                      "_media-type": "application/vnd.ez.api.VersionList+json"
                                    },
                                    "CurrentVersion": {
                                      "_href": "/content/objects/23/currentversion",
                                      "_media-type": "application/vnd.ez.api.Version+json",
                                      "Version": {
                                        "_href": "/content/objects/23/versions/1",
                                        "_media-type": "application/vnd.ez.api.Version+json",
                                        "VersionInfo": {
                                          "id": "123",
                                          "versionNo": "1",
                                          "status": "DRAFT",
                                          "modificationDate": "2012-02-12T12:30:00",
                                          "creator": {
                                            "_href": "/user/users/14",
                                            "_media-type": "application/vnd.ez.api.User+json"
                                          },
                                          "creationDate": "2012-02-12T12:30:00",
                                          "initialLanguageCode": "eng-US",
                                          "Content": {
                                            "_href": "/content/objects/23",
                                            "_media-type": "application/vnd.ez.api.ContentInfo+json"
                                          }
                                        },
                                        "fields": {
                                          "field": [
                                            {
                                              "id": "1234",
                                              "fieldDefinitionIdentifier": "title",
                                              "languageCode": "eng-UK",
                                              "fieldValue": "This is a title"
                                            },
                                            {
                                              "id": "1235",
                                              "fieldDefinitionIdentifier": "summary",
                                              "languageCode": "eng-UK",
                                              "fieldValue": "This is a summary"
                                            },
                                            {
                                              "fieldDefinitionIdentifier": "authors",
                                              "languageCode": "eng-US",
                                              "fieldValue":
                                              [
                                                {
                                                  "name": "John Doe",
                                                  "email": "john.doe@example.net"
                                                },
                                                {
                                                  "name": "Bruce Willis",
                                                  "email": "bruce.willis@example.net"
                                                }
                                              ]
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    "Section": {
                                      "_href": "/content/sections/4",
                                      "_media-type": "application/vnd.ez.api.Section+json"
                                    },
                                    "MainLocation": {
                                      "_href": "/content/locations/1/4/65",
                                      "_media-type": "application/vnd.ez.api.Location+json"
                                    },
                                    "Locations": {
                                      "_href": "/content/objects/23/locations",
                                      "_media-type": "application/vnd.ez.api.LocationList+json"
                                    },
                                    "Owner": {
                                      "_href": "/user/users/14",
                                      "_media-type": "application/vnd.ez.api.User+json"
                                    },
                                    "lastModificationDate": "2012-02-12T12:30:00",
                                    "mainLanguageCode": "eng-US",
                                    "currentVersionNo": "1",
                                    "alwaysAvailable": true
                                  }
                                }
                400:
                    description: Error - the Input does not match the input schema definition or the validation on a field fails
                401:
                    description: Error - the user is not authorized to create this object in this location
                404:
                    description: Error - a parent location is specified in the request body and it does not exist
        get:
            description: Loads the content for a given remote ID
            queryParameters:
                remoteId:
                    description: The remote ID of the content. If present the content with the given remote ID is returned
            responses:
                307:
                    description: Temporary redirect
                404:
                    description: Error - the content with the given remote ID does not exist
        /{contentId}:
            get:
                description: Loads the content object for the given ID. Depending on the Accept header the current version is embedded (i.e the current published version or if not exists the draft of the authenticated user)
                queryParameters:
                     languages:
                        description: Restricts the output of translatable fields to the given languages
                        type: comma separated list
                headers:
                    Accept:
                        description: Content - 	if set all informations for the content object including the embedded current version are returned in xml or json format. ContentInfo - 	if set all informations for the content object (excluding the current version) are returned in xml or json format
                        example:  |
                            application/vnd.ez.api.Content+xml
                            application/vnd.ez.api.Content+json
                            application/vnd.ez.api.ContentInfo+xml
                            application/vnd.ez.api.ContentInfo+json
                    If-None-Match:
                        description: If the provided etag matches the current etag then a "304 Not Modified" is returned. The etag changes if the meta data was changed - this happens also if there is a new published version.
                        example: ETag
                responses:
                    200:
                        body:
                            application/vnd.ez.api.Content+xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8"?>
                                    <Content href="/content/objects/23" id="23"
                                      media-type="application/vnd.ez.api.Content+xml" remoteId="qwert123">
                                      <ContentType href="/content/types/10" media-type="application/vnd.ez.api.ContentType+xml" />
                                      <Name>This is a title</Name>
                                      <Versions href="/content/objects/23/versions" media-type="application/vnd.ez.api.VersionList+xml" />
                                      <CurrentVersion href="/content/objects/23/currentversion"
                                        media-type="application/vnd.ez.api.Version+xml"/>
                                      <Section href="/content/sections/4" media-type="application/vnd.ez.api.Section+xml" />
                                      <MainLocation href="/content/locations/1/4/65" media-type="application/vnd.ez.api.Location+xml" />
                                      <Locations href="/content/objects/23/locations" media-type="application/vnd.ez.api.LocationList+xml" />
                                      <Owner href="/user/users/14" media-type="application/vnd.ez.api.User+xml" />
                                      <lastModificationDate>2012-02-12T12:30:00</lastModificationDate>
                                      <publishedDate>2012-02-12T15:30:00</publishedDate>
                                      <mainLanguageCode>eng-US</mainLanguageCode>
                                      <currentVersionNo>1</currentVersionNo>
                                      <alwaysAvailable>true</alwaysAvailable>
                                    </Content>
                    401:
                        description: Error - the user is not authorized to read this object. This could also happen if there is no published version yet and another user owns a draft of this content
                    404:
                        description: Error - the ID is not found
            patch:
                description: This method updates the content metadata which is independent from a version. PATCH or POST with header X-HTTP-Method-Override PATCH.
                headers:
                     Accept:
                        description: If set all informations for the content object (excluding the current version) are returned in xml or json format
                        example:  |
                            application/vnd.ez.api.ContentInfo+xml
                            application/vnd.ez.api.ContentInfo+json
                     If-match:
                         description: Causes to patch only if the specified etag is the current one. Otherwise a 412 is returned.
                         example: ETag
                     Content-Type:
                        description: the ContentUpdate schema encoded in xml or json
                        example:  |
                            application/vnd.ez.api.ContentUpdate+xml
                            application/vnd.ez.api.ContentUpdate+json
                body:
                    application/vnd.ez.api.ContentInfo+xml:
                        schema: |
                        example: |
                            <?xml version="1.0" encoding="UTF-8"?>
                            <ContentUpdate>
                              <mainLanguageCode>ger-DE</mainLanguageCode>
                              <Section href="/content/sections/3"/>
                              <MainLocation href="/content/locations/1/13/55"/>
                              <Owner href="/user/users/13"/>
                              <alwaysAvailable>false</alwaysAvailable>
                              <remoteId>qwert4321</remoteId>
                            </ContentUpdate>
                responses:
                    200:
                        body:
                            application/vnd.ez.api.ContentUpdate+xml:
                                example: |
                                    <?xml version="1.0" encoding="UTF-8"?>
                                    <Content href="/content/objects/23" id="23"
                                      media-type="application/vnd.ez.api.Content+xml" remoteId="qwert4321">
                                      <ContentType href="/content/types/10" media-type="application/vnd.ez.api.ContentType+xml" />
                                      <Name>This is a title</Name>
                                      <Versions href="/content/objects/23/versions" media-type="application/vnd.ez.api.VersionList+xml" />
                                      <CurrentVersion href="/content/objects/23/currentversion"
                                        media-type="application/vnd.ez.api.Version+xml"/>
                                      <Section href="/content/sections/3" media-type="application/vnd.ez.api.Section+xml" />
                                      <MainLocation href="/content/locations/1/13/55" media-type="application/vnd.ez.api.Location+xml" />
                                      <Locations href="/content/objects/23/locations" media-type="application/vnd.ez.api.LocationList+xml" />
                                      <Owner href="/user/users/13" media-type="application/vnd.ez.api.User+xml" />
                                      <lastModificationDate>2012-02-12T12:30:00</lastModificationDate>
                                      <publishedDate>2012-02-12T15:30:00</publishedDate>
                                      <mainLanguageCode>ger-DE</mainLanguageCode>
                                      <currentVersionNo>1</currentVersionNo>
                                      <alwaysAvailable>false</alwaysAvailable>
                                    </Content>
                    400:
                        description: Error - the Input does not match the input schema definition
                    401:
                        description: Error - the user is not authorized to update this object
                    404:
                        description: Error - the content id does not exist
                    412:
                        description: Error - the current ETag does not match with the provided one in the If-Match header
                    415:
                        description: Error - the media-type is not one of those specified in Headers
            delete:
                description: The content is deleted. If the content has locations (which is required in 4.x) on delete all locations assigned the content object are deleted via delete subtree.
                responses:
                    204:
                        description: The content is deleted.
                    404:
                        description: Error - content object was not found
                    401:
                        description: Error - the user is not authorized to delete this object
            copy:
                description: Creates a new content object as copy under the given parent location given in the destination header. COPY or POST with header X-HTTP-Method-Override COPY.
                headers:
                    destination:
                        description: A location resource to which the content object should be copied.
                responses:
                    201:
                        description: Copy created
                    401:
                        description: Error - the user is not authorized to copy this object to the given location
                    404:
                        description: Error - the source or destination resource do not exist.
            /translations/{languageCode}:
                delete:
                    description: Permanently delete a Translation from all Versions of a Content
                    responses:
                        204:
                            description: No Content
                        401:
                            description: Error - the user is not authorized to delete Content (content/remove policy)
                        404:
                            description: Error - the Content item was not found
                        406:
                            description: Error - the given Translation does not exist for the Content
                        409:
                            description: Error - the specified Translation is the only one any Version has or is the Main Translation
            /currentversion:
                get:
                    description: Redirects to the current version of the content object
                    responses:
                        307:
                            description: Temporary redirect
                        404:
                            description: Error - the resource does not exist
                copy:
                    description: The system creates a new draft version as a copy from the current version. COPY or POST with header X-HTTP-Method-Override COPY.
                    headers:
                      Accept:
                          description: if set the updated version is returned in xml or json format
                          example:  |
                              application/vnd.ez.api.Version+xml
                              application/vnd.ez.api.Version+json
                    responses:
                        201:
                            description: Created
                        401:
                            description: Error - the user is not authorized to update this object
                        403:
                            description: Error - the current version is already a draft
                        404:
                            description: Error - the content object was not found
            /versions:
                get:
                    description: Returns a list of all versions of the content. This method does not include fields and relations in the Version elements of the response.
                    headers:
                        Accept:
                            description: if set the version list is returned in xml or json format
                            example:  |
                                application/vnd.ez.api.VersionList+xml
                                application/vnd.ez.api.VersionList+json
                    responses:
                        200:
                            body:
                                application/vnd.ez.api.VersionList+xml:
                                    example:  |
                                        <?xml version="1.0" encoding="UTF-8"?>
                                        <VersionList href="/content/objects/23/versions" media-type="application/vnd.ez.api.VersionList+xml">
                                          <VersionItem>
                                            <Version href="/content/objects/23/versions/1" media-type="application/vnd.ez.api.Version+xml"/>
                                            <VersionInfo>
                                              <id>12</id>
                                              <versionNo>1</versionNo>
                                              <status>ARCHIVED</status>
                                              <modificationDate>2012-02-15T12:00:00</modificationDate>
                                              <Creator href="/user/users/8" media-type="application/vnd.ez.api.User+xml" />
                                              <creationDate>22012-02-15T12:00:00</creationDate>
                                              <initialLanguageCode>eng-US</initialLanguageCode>
                                              <names>
                                                <value languageCode="eng-US">Name</value>
                                              </names>
                                              <Content href="/content/objects/23" media-type="application/vnd.ez.api.ContentInfo+xml" />
                                            </VersionInfo>
                                          </VersionItem>
                                          <VersionItem>
                                            <Version href="/content/objects/23/versions/2" media-type="application/vnd.ez.api.Version+xml"/>
                                            <VersionInfo>
                                              <id>22</id>
                                              <versionNo>2</versionNo>
                                              <status>PUBLISHED</status>
                                              <modificationDate>2012-02-17T12:00:00</modificationDate>
                                              <Creator href="/user/users/8" media-type="application/vnd.ez.api.User+xml" />
                                              <creationDate>22012-02-17T12:00:00</creationDate>
                                              <initialLanguageCode>eng-US</initialLanguageCode>
                                              <names>
                                                <value languageCode="eng-US">Name</value>
                                              </names>
                                              <Content href="/content/objects/23" media-type="application/vnd.ez.api.ContentInfo+xml" />
                                            </VersionInfo>
                                          </VersionItem>
                                          <VersionItem>
                                            <Version href="/content/objects/23/versions/3" media-type="application/vnd.ez.api.Version+xml"/>
                                            <VersionInfo>
                                              <id>44</id>
                                              <versionNo>3</versionNo>
                                              <status>DRAFT</status>
                                              <modificationDate>2012-02-19T12:00:00</modificationDate>
                                              <Creator href="/user/users/65" media-type="application/vnd.ez.api.User+xml" />
                                              <creationDate>22012-02-19T12:00:00</creationDate>
                                              <initialLanguageCode>fra-FR</initialLanguageCode>
                                              <names>
                                                <value languageCode="eng-US">Name</value>
                                                <value languageCode="fra-FR">Nom</value>
                                              </names>
                                              <Content href="/content/objects/23" media-type="application/vnd.ez.api.ContentInfo+xml" />
                                            </VersionInfo>
                                          </VersionItem>
                                          <VersionItem>
                                            <Version href="/content/objects/23/versions/4" media-type="application/vnd.ez.api.Version+xml"/>
                                            <VersionInfo>
                                              <id>45</id>
                                              <versionNo>4</versionNo>
                                              <status>DRAFT</status>
                                              <modificationDate>2012-02-20T12:00:00</modificationDate>
                                              <Creator href="/user/users/44" media-type="application/vnd.ez.api.User+xml" />
                                              <creationDate>22012-02-20T12:00:00</creationDate>
                                              <initialLanguageCode>ger-DE</initialLanguageCode>
                                              <names>
                                                <value languageCode="eng-US">Name</value>
                                                <value languageCode="ger-DE">Name</value>
                                              </names>
                                              <Content href="/content/objects/23" media-type="application/vnd.ez.api.ContentInfo+xml" />
                                            </VersionInfo>
                                          </VersionItem>
                                        </VersionList>
                        401:
                            description: Error - the user has no permission to read the versions
                /{versionNo}:
                    get:
                        description: Loads a specific version of a content object. This method returns fields and relations
                        queryParameters:
                            fields:
                                description: Fields which should be returned in the response (see Content)
                                type: Comma separated list
                            responseGroups:
                                description: Alternative: comma separated lists of predefined field groups (see REST API Spec v1)
                                type: Comma separated lists
                            languages:
                                description: Restricts the output of translatable fields to the given languages
                                type: Comma separated list
                        headers:
                            If-None-Match:
                                description: Only return the version if the given ETag is the not current one otherwise a 304 is returned.
                                example: ETag
                            Accept:
                                description: if set the version list is returned in xml or json format
                                example:  |
                                    application/vnd.ez.api.Version+xml
                                    application/vnd.ez.api.Version+json
                        responses:
                            200:
                                body:
                                    application/vnd.ez.api.Version+xml:
                                        example: |
                                            <?xml version="1.0" encoding="UTF-8"?>
                                            <Version href="/content/objects/23/versions/4" media-type="application/vnd.ez.api.Version+xml"
                                                     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                                              <VersionInfo>
                                                <id>45</id>
                                                <versionNo>4</versionNo>
                                                <status>DRAFT</status>
                                                <modificationDate>2012-02-20T12:00:00</modificationDate>
                                                <Creator href="/user/users/44" media-type="application/vnd.ez.api.User+xml" />
                                                <creationDate>22012-02-20T12:00:00</creationDate>
                                                <initialLanguageCode>ger-DE</initialLanguageCode>
                                                <names>
                                                  <value languageCode="ger-DE">Name</value>
                                                </names>
                                                <Content href="/content/objects/23" media-type="application/vnd.ez.api.ContentInfo+xml" />
                                              </VersionInfo>
                                              <Fields>
                                                <field>
                                                  <id>1234</id>
                                                  <fieldDefinitionIdentifier>title</fieldDefinitionIdentifier>
                                                  <languageCode>ger-DE</languageCode>
                                                  <fieldValue>Titel</fieldValue>
                                                </field>
                                                <field>
                                                  <id>1235</id>
                                                  <fieldDefinitionIdentifier>summary</fieldDefinitionIdentifier>
                                                  <languageCode>ger-DE</languageCode>
                                                  <fieldValue>Dies ist eine Zusammenfassungy</fieldValue>
                                                </field>
                                                <field>
                                                  <fieldDefinitionIdentifier>authors</fieldDefinitionIdentifier>
                                                  <languageCode>ger-DE</languageCode>
                                                  <fieldValue>
                                                    <value>
                                                      <value key="name">Karl Mustermann</value>
                                                      <value key="email">karl.mustermann@example.net</value>
                                                    </value>
                                                  </fieldValue>
                                                </field>
                                              </Fields>
                                              <Relations  href="/content/objects/23/relations"  media-type="application/vnd.ez.api.RelationList+xml">>
                                                <Relation href="/content/objects/23/relations/32" media-type="application/vnd.ez.api.Relation+xml">
                                                  <SourceContent href="/content/objects/23"
                                                    media-type="application/vnd.ez.api.ContentInfo+xml" />
                                                  <DestinationContent href="/content/objects/45"
                                                    media-type="application/vnd.ez.api.ContentInfo+xml" />
                                                  <RelationType>COMMON</RelationType>
                                                </Relation>
                                              </Relations>
                            304:
                                description: Error - the etag does not match the current one
                            401:
                                description: Error - the user is not authorized to read this object
                            404:
                                description: Error - the ID or version is not found
                    post:
                        description: A specific draft is updated. PATCH or POST with header X-HTTP-Method-Override PATCH.
                        queryParameters:
                            languages:
                                description: restricts the output of translatable fields to the given languages
                                type: Comma separated list
                        headers:
                            Accept:
                                description: if set the updated version is returned in xml or json format
                                example:  |
                                    application/vnd.ez.api.Version+xml
                                    application/vnd.ez.api.Version+json
                            If-match:
                                description: Causes to patch only if the specified etag is the current one
                            Content-Type:
                                description: the VersionUpdate schema encoded in xml or json
                                example:  |
                                    application/vnd.ez.api.VersionUpdate+xml
                                    application/vnd.ez.api.VersionUpdate+json
                        body:
                          application/vnd.ez.api.Version+xml:
                              schema:
                              example:  |
                                  <?xml version="1.0" encoding="UTF-8"?>
                                  <VersionUpdate xmlns:p="http://ez.no/API/Values"
                                    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                                    xsi:schemaLocation="http://ez.no/API/Values ../VersionUpdate.xsd ">
                                    <modificationDate>2001-12-31T12:00:00</modificationDate>
                                    <initialLanguageCode>ger-DE</initialLanguageCode>
                                    <fields>
                                      <field>
                                        <id>1234</id>
                                        <fieldDefinitionIdentifier>title</fieldDefinitionIdentifier>
                                        <languageCode>ger-DE</languageCode>
                                        <fieldValue>Neuer Titel</fieldValue>
                                      </field>
                                      <field>
                                        <id>1235</id>
                                        <fieldDefinitionIdentifier>summary</fieldDefinitionIdentifier>
                                        <languageCode>ger-DE</languageCode>
                                        <fieldValue>Dies ist eine neue Zusammenfassungy</fieldValue>
                                      </field>
                                    </fields>
                                  </VersionUpdate>
                        responses:
                            200:
                                body:
                                    application/vnd.ez.api.Version+xml:
                                        example:  |
                                            <?xml version="1.0" encoding="UTF-8"?>
                                            <Version href="/content/objects/23/versions/4" media-type="application/vnd.ez.api.Version+xml">
                                              <VersionInfo>
                                                <id>45</id>
                                                <versionNo>4</versionNo>
                                                <status>DRAFT</status>
                                                <modificationDate>2012-02-20T12:00:00</modificationDate>
                                                <Creator href="/user/users/44" media-type="application/vnd.ez.api.User+xml" />
                                                <creationDate>22012-02-20T12:00:00</creationDate>
                                                <initialLanguageCode>ger-DE</initialLanguageCode>
                                                <names>
                                                  <value languageCode="ger-DE">Neuer Titel</value>
                                                </names>
                                                <Content href="/content/objects/23" media-type="application/vnd.ez.api.ContentInfo+xml" />
                                              </VersionInfo>
                                              <Fields>
                                                <field>
                                                  <id>1234</id>
                                                  <fieldDefinitionIdentifier>title</fieldDefinitionIdentifier>
                                                  <languageCode>ger-DE</languageCode>
                                                  <fieldValue>Neuer Titel</fieldValue>
                                                </field>
                                                <field>
                                                  <id>1235</id>
                                                  <fieldDefinitionIdentifier>summary</fieldDefinitionIdentifier>
                                                  <languageCode>ger-DE</languageCode>
                                                  <fieldValue>Dies ist eine neuse Zusammenfassungy</fieldValue>
                                                </field>
                                                <field>
                                                  <fieldDefinitionIdentifier>authors</fieldDefinitionIdentifier>
                                                  <languageCode>ger-DE</languageCode>
                                                  <fieldValue>
                                                    <authors>
                                                      <author name="Klaus Mustermann" email="klaus.mustermann@example.net" />
                                                    </authors>
                                                  </fieldValue>
                                                </field>
                                              </Fields>
                                              <Relations>
                                                <Relation href="/content/object/32/versions/2/relations/43" media-type="application/vnd.ez.api.Relation+xml">
                                                  <SourceContent href="/content/objects/23"
                                                    media-type="application/vnd.ez.api.ContentInfo+xml" />
                                                  <DestinationContent href="/content/objects/45"
                                                    media-type="application/vnd.ez.api.ContentInfo+xml" />
                                                  <RelationType>COMMON</RelationType>
                                                </Relation>
                                              </Relations>
                                            </Version>
                            400:
                                description: Error - the Input does not match the input schema definition, In this case the response contains an ErrorMessage
                            401:
                                description: Error - the user is not authorized to update this version
                            403:
                                description: Error - the version is not allowed to change - i.e is not a DRAFT
                            404:
                                description: Error - the content id or version id does not exist
                            412:
                                description: Error - the current ETag does not match with the provided one in the If-Match header
                    copy:
                        description: The system creates a new draft version as a copy from the given version. COPY or POST with header X-HTTP-Method-Override COPY.
                        headers:
                            Accept:
                                description: if set the updated version is returned in xml or json format
                                example:  |
                                    application/vnd.ez.api.Version+xml
                                    application/vnd.ez.api.Version+json
                        responses:
                            201:
                                description: Created
                            401:
                                description: Error - the user is not authorized to update this object
                            404:
                                description: Error - the content object was not found
                    delete:
                        description: The version is deleted
                        responses:
                            204:
                                description: No Content - the version is deleted
                            404:
                                description: Error - the content object or version nr was not found
                            401:
                                description: Error - the user is not authorized to delete this version
                            403:
                                description: Error - the version is in state published
                    publish:
                        description: The content version is published. PUBLISH or POST with header X-HTTP-Method-Override PUBLISH
                        responses:
                            204:
                                description: No Content - the content version is published
                            401:
                                description: Error - the user is not authorized to publish this version
                            403:
                                description: Error - the version is not a draft
                            404:
                                description: Error - the content object or version nr was not found
                    /translations/{languageCode}:
                        delete:
                            description: Removes a translation from a version draft
                            responses:
                                204:
                                    description: No Content - removes a translation from a version draft
                                401:
                                    description: Error - the user is not authorized to delete this translation
                                403:
                                    description: Error - the version is in not draft state
                                404:
                                    description: Error - the content item or version number were not found
                                406:
                                    description: Error - the given translation does not exist for the version
                                409:
                                    description: Error - the specified translation is the only one the Version has or is the main translation
                    /relations:
                        get:
                            description: Loads the relations of the given version
                            queryParameters:
                                offset:
                                    description: the offset of the result set
                                    type: integer
                                limit:
                                    description: the number of bookmarks returned
                                    type: integer
                            headers:
                                Accept:
                                    description: if set the relation is returned in xml or json format
                                    example:  |
                                        application/vnd.ez.api.RelationList+xml
                                        application/vnd.ez.api.RelationList+json
                            responses:
                                200:
                                    body:
                                        application/vnd.ez.api.RelationList+xml:
                                            example:  |
                                                <?xml version="1.0" encoding="UTF-8"?>
                                                <Relations href="/content/object/32/versions/2/relations" media-type="application/vnd.ez.api.RelationList+xml">
                                                    <Relation href="/content/object/32/versions/2/relations/43" media-type="application/vnd.ez.api.Relation+xml">
                                                      <SourceContent href="/content/objects/23"
                                                        media-type="application/vnd.ez.api.ContentInfo+xml" />
                                                      <DestinationContent href="/content/objects/45"
                                                        media-type="application/vnd.ez.api.ContentInfo+xml" />
                                                      <RelationType>COMMON</RelationType>
                                                    </Relation>
                                                    <Relation href="/content/object/32/versions/2/relations/98" media-type="application/vnd.ez.api.Relation+xml">
                                                      <SourceContent href="/content/objects/23"
                                                        media-type="application/vnd.ez.api.ContentInfo+xml" />
                                                      <DestinationContent href="/content/objects/87"
                                                        media-type="application/vnd.ez.api.ContentInfo+xml" />
                                                      <sourceFieldDefinitionIdentifier>body</sourceFieldDefinitionIdentifier>
                                                      <RelationType>EMBED</RelationType>
                                                    </Relation>
                                                </Relations>
                                401:
                                    description: Error - the user is not authorized to read this object
                                404:
                                    description: Error - the content object was not found
                        post:
                            description: Creates a new relation of type COMMON for the given draft.
                            headers:
                                Accept:
                                    description: if set the updated version is returned in xml or json format
                                    example:  |
                                        application/vnd.ez.api.Relation+xml
                                        application/vnd.ez.api.Relation+json
                                Content-Type:
                                    description: the RelationCreate (see RelationCreate) schema encoded in xml or json
                                    example:  |
                                        application/vnd.ez.api.RelationCreate+xml
                                        application/vnd.ez.api.RelationCreate+json
                            body:
                                application/vnd.ez.api.Relation+xml:
                                    schema:
                                    example:  |
                                        <?xml version="1.0" encoding="UTF-8"?>
                                        <RelationCreate>
                                          <Destination href="/content/objects/66"/>
                                        </RelationCreate>
                            responses:
                                201:
                                    body:
                                        application/vnd.ez.api.Relation+xml:
                                            example:  |
                                                <?xml version="1.0" encoding="UTF-8"?>
                                                <Relation href="/content/object/32/versions/2/relations/66" media-type="application/vnd.ez.api.Relation+xml">
                                                  <SourceContent href="/content/objects/23"
                                                    media-type="application/vnd.ez.api.ContentInfo+xml" />
                                                  <DestinationContent href="/content/objects/66"
                                                    media-type="application/vnd.ez.api.ContentInfo+xml" />
                                                  <RelationType>COMMON</RelationType>
                                                </Relation>
                        /{id}:
                                get:
                                    description: loads a relation for the given content object
                                    headers:
                                        Accept:
                                            description: if set the relation is returned in xml or json format
                                            example:  |
                                                application/vnd.ez.api.Relation+xml
                                                application/vnd.ez.api.Relation+json
                                    responses:
                                        200:
                                            description: OK - loads a relation for the given content object
                                        401:
                                            description: Error - the user is not authorized to read this object
                                        404:
                                            description: Error - the object with the given id or the relation does not exist
                                delete:
                                    description: Deletes a relation of the given draft.
                                    responses:
                                        204:
                                            description: No Content - deleted a relation of the given draft.
                                        401:
                                            description: Error - the user is not authorized to delete this relation
                                        403:
                                            description: Error - the relation is not of type COMMON or the given version is not a draft
                                        404:
                                            description: Error - content object was not found or the relation was not found in the given version
            /relations:
                get:
                    description: Redirects to the relations of the current version
                    responses:
                      307:
                          description: Temporary redirect
                      401:
                          description: Error - the user is not authorized to read this object
                      404:
                          description: Error - the content object was not found
            /locations:
                    post:
                        description: Creates a new location for the given content object
                        headers:
                            Accept:
                                description: if set the new location is returned in xml or json format
                                example:  |
                                    application/vnd.ez.api.Location+xml
                                    application/vnd.ez.api.Location+json
                            Content-Type:
                                description: the LocationCreate schema encoded in xml or json
                                example:  |
                                    application/vnd.ez.api.LocationCreate+json
                                    application/vnd.ez.api.LocationCreate+xml
                        body:
                            application/vnd.ez.api.Location+xml:
                                schema:
                                example:  |
                                    <?xml version="1.0" encoding="UTF-8"?>
                                    <LocationCreate>
                                      <ParentLocation href="/content/locations/1/5/73" />
                                      <priority>0</priority>
                                      <hidden>false</hidden>
                                      <sortField>PATH</sortField>
                                      <sortOrder>ASC</sortOrder>
                                    </LocationCreate>
                        responses:
                            201:
                                body:
                                    application/vnd.ez.api.Location+xml:
                                        example:  |
                                            <?xml version="1.0" encoding="UTF-8"?>
                                            <Location href="/content/locations/1/5/73/133" media-type="application/vnd.ez.api.Location+xml">
                                              <id>133</id>
                                              <priority>0</priority>
                                              <hidden>false</hidden>
                                              <invisible>false</invisible>
                                              <ParentLocation href="/content/locations/1/5/73" media-type="application/vnd.ez.api.Location+xml"/>
                                              <pathString>/1/5/73/133</pathString>
                                              <depth>4</depth>
                                              <childCount>0</childCount>
                                              <remoteId>remoteId-qwert567</remoteId>
                                              <Children href="/content/locations/1/5/73/133/children" media-type="application/vnd.ez.api.LocationList+xml"/>
                                              <Content href="/content/objects/23" media-type="application/vnd.ez.api.Content+xml"/>
                                              <sortField>PATH</sortField>
                                              <sortOrder>ASC</sortOrder>
                                            </Location>
                            400:
                                description: Error - the Input does not match the input schema definition, In this case the response contains an ErrorMessage
                            401:
                                description: Error - the user is not authorized to create this location
                            403:
                                description: Error - a location under the given parent id already exists
                    get:
                        description: loads all locations for the given content object
                        headers:
                            Accept:
                                description: if set the new location is returned in xml or json format
                                example:  |
                                    application/vnd.ez.api.LocationList+xml
                                    application/vnd.ez.api.LocationList+json
                            If-None-Match:
                                description: ETag
                        responses:
                            200:
                                body:
                                    application/vnd.ez.api.LocationList+xml:
                                        example:  |
                                            <?xml version="1.0" encoding="UTF-8"?>
                                            <LocationList href="/content/objects/23/locations" media-type="application/vnd.ez.api.LocationList+xml">
                                              <Location href="/content/locations/1/2/56" media-type="application/vnd.ez.api.Location+xml"/>
                                              <Location href="/content/locations/1/4/73/133" media-type="application/vnd.ez.api.Location+xml"/>
                                            </LocationList>
                            401:
                                description: Error - the user is not authorized to read this object
                            404:
                                description: Error - the object with the given ID does not exist
    /binary/images/{imageId}/variations/{variationIdentifier}:
        get:
            description: Loads an image variation
            headers:
                Accept:
                    description: if set the image is returned in xml or json format
                    example:  |
                        application/vnd.ez.api.ImageVariation+xml
                        application/vnd.ez.api.ImageVariation+json
            responses:
                200:
                    body:
                         application/vnd.ez.api.ImageVariation+xml:
                            example:  |
                                <ImageVariation href="/content/binary/images/123-12345/variations/large" media-type="application/vnd.ez.api.ImageVariation+xml">
                                    <uri>/var/ezdemo_site/storage/images/media/images/challenge-accepted/35804-1-eng-GB/Challenge-accepted.jpg</uri>
                                    <contentType>image/jpg</contentType>
                                    <width>640</width>
                                    <height>400</height>
                                    <fileSize>90387</fileSize>
                                </ImageVariation>
                401:
                    description: Error - the user is not authorized to read this object
                404:
                    description: Error - imageId doesn't match any image
                404:
                    description: Error - variationIdentifier doesn't match any known variation
    /locations:
        get:
            description: loads the location for a given ID (x), remote ID or URL alias
            queryParameters:
                id:
                    description: the id of the location. If present the location is with the given id is returned.
                remoteId:
                    description: the remoteId of the location. If present the location with the given remoteId is returned
                urlAlias:
                    description: one of the url Aliases of the location. If present the location with given url Alias is returned
            responses:
                307:
                    description: Temporary redirect
                404:
                    description: Error - the location with the given id (remoteId or urlAlias) does not exist
        /{path}:
            get:
                description: loads the location for the given path
                headers:
                    Accept:
                        description: if set the new location is returned in xml or json format
                        example:  |
                            application/vnd.ez.api.Location+xml
                            application/vnd.ez.api.Location+json
                    If-None-Match:
                        description: ETag
                responses:
                    200:
                        body:
                            application/vnd.ez.api.Location+xml:
                                example:
                                    <?xml version="1.0" encoding="UTF-8"?>
                                    <Location href="/content/locations/1/5/73/133" media-type="application/vnd.ez.api.Location+xml">
                                      <id>133</id>
                                      <priority>0</priority>
                                      <hidden>false</hidden>
                                      <invisible>false</invisible>
                                      <ParentLocation href="/content/locations/1/5/73" media-type="application/vnd.ez.api.Location+xml"/>
                                      <pathString>/1/5/73/133</pathString>
                                      <depth>4</depth>
                                      <childCount>0</childCount>
                                      <remoteId>remoteId-qwert567</remoteId>
                                      <Children href="/content/locations/1/5/73/133/children" media-type="application/vnd.ez.api.LocationList+xml"/>
                                      <Content href="/content/objects/23" media-type="application/vnd.ez.api.Content+xml"/>
                                      <sortField>PATH</sortField>
                                      <sortOrder>ASC</sortOrder>
                                      <UrlAliases media-type="application/vnd.ez.api.UrlAliasRefList+xml" href="/api/ezp/v2/content/locations/1/4/73/133/urlaliases"/>
                                    </Location>
                    401:
                        description: Error - the user is not authorized to read this location
                    404:
                        description: Error - the location with the given path does not exist
            move:
                description: moves the location to another parent. The destination can also be /content/trash where the location is put into the trash. (NOTE - Be aware that the user might not have access to the item any longer after it has been moved, for example when read access is limited by subtree). MOVE or POST with header X-HTTP-Method-Override MOVE
                headers:
                    Destination:
                        description: A parent location resource to which the location is moved
                responses:
                    201:
                        description: Created. If destination is /content/trash and content only has one location (NOTE Like on normal subtree moves, be aware that the user might not have access to the item any longer after it has been moved to trash)
                    204:
                        description: No Content. If destination is /content/trash and content still has other locations (no trash item is created).
                    401:
                        description: Error - the user is not authorized to move this location
                    404:
                        description: Error - the location with the given id does not exist
            copy:
                description: Copies the subtree to another parent. COPY or POST with header X-HTTP-Method-Override COPY
                headers:
                    Destination:
                        description: A parent location resource to which the location is moved
                responses:
                    201:
                        description: Created. Copied the subtree to another parent.
                    401:
                        description: Error - the user is not authorized to move this location
                    404:
                        description: Error - the location with the given id does not exist
            delete:
                description: Deletes the complete subtree for the given path. Every content object is deleted which does not have any other location. Otherwise the deleted location is removed from the content object. The children a recursively deleted.
                responses:
                    204:
                        description: No Content - deleted.
                    401:
                        description: Error - the user is not authorized to delete this subtree
                    404:
                        description: Error - the location with the given id does not exist
            /children:
                get:
                    description: loads all child locations for the given parent location
                    queryParameters:
                        offset:
                            description: the offset of the result set
                            type: integer
                        limit:
                            description: the number of bookmarks returned
                            type: integer
                    headers:
                        Accept:
                            description: if set the new location list is returned in xml or json format
                            example:  |
                                 application/vnd.ez.api.LocationList+xml
                                 application/vnd.ez.api.LocationList+json
                    responses:
                        200:
                            body:
                                application/vnd.ez.api.LocationList+xml:
                                    example:  |
                                        <?xml version="1.0" encoding="UTF-8"?>
                                        <LocationList href="/content/locations/1/2/54" media-type="application/vnd.ez.api.LocationList+xml">
                                          <Location href="/content/locations/1/2/54/134" media-type="application/vnd.ez.api.Location+xml"/>
                                          <Location href="/content/locations/1/4/54/143" media-type="application/vnd.ez.api.Location+xml"/>
                                        </LocationList>
                        401:
                            description: Error - the user is not authorized to read this object
                        404:
                            description: Error - the object with the given id does not exist
        /{contentId}:
            patch:
                description: updates the location, this method can also be used to hide/unhide a location via the hidden field in the LocationUpdate. PATCH or POST with header X-HTTP-Method-Override PATCH
                headers:
                    Accept:
                        description: if set the new location is returned in xml or json format
                        example:  |
                            application/vnd.ez.api.Location+xml
                            application/vnd.ez.api.Location+json
                    Content-Type:
                        description: the LocationUpdate schema encoded in xml or json
                        example:  |
                            application/vnd.ez.api.LocationUpdate+xml
                            application/vnd.ez.api.LocationUpdate+json
                    If-Match:
                        description: ETag
                body:
                    application/vnd.ez.api.Location+xml:
                        schema:
                        example: |
                            <?xml version="1.0" encoding="UTF-8"?>
                            <LocationUpdate>
                              <priority>3</priority>
                              <hidden>true</hidden>
                              <remoteId>remoteId-qwert999</remoteId>
                              <sortField>CLASS</sortField>
                              <sortOrder>DESC</sortOrder>
                            </LocationUpdate>
                responses:
                    200:
                        body:
                            application/vnd.ez.api.Location+xml:
                                example:  |
                                    <?xml version="1.0" encoding="UTF-8"?>
                                    <Location href="/content/locations/1/5/73/133" media-type="application/vnd.ez.api.Location+xml">
                                      <id>133</id>
                                      <priority>3</priority>
                                      <hidden>true</hidden>
                                      <invisible>true</invisible>
                                      <ParentLocation href="/content/locations/1/5/73" media-type="application/vnd.ez.api.Location+xml"/>
                                      <pathString>/1/5/73/133</pathString>
                                      <depth>4</depth>
                                      <childCount>0</childCount>
                                      <remoteId>remoteId-qwert999</remoteId>
                                      <Children href="/content/locations/1/5/73/133/children" media-type="application/vnd.ez.api.LocationList+xml"/>
                                      <Content href="/content/objects/23" media-type="application/vnd.ez.api.Content+xml"/>
                                      <sortField>CLASS</sortField>
                                      <sortOrder>ASC</sortOrder>
                                    </Location>
                    401:
                        description: Error - the user is not authorized to update this location
                    404:
                        description: Error - the location with the given id does not exist
            post:
                description: Swaps the content of the location with the content of the given location. SWAP or POST with header X-HTTP-Method-Override SWAP
                headers:
                    Destination:
                        description: A parent location resource to which the location is moved
                responses:
                    204:
                        description: No Content. Swapped the content of the location with the content of the given location
                    401:
                        description: Error - the user is not authorized to swap this location
                    404:
                        description: Error - the location with the given id does not exist
    /views:
        post:
            description: Executes a query and returns view including the results. The View input reflects the criteria model of the public API. Will respond with a 301, as the resource has been moved to /views (Platform 1.0)
            headers:
                Accept:
                    description: the view in xml or json format
                    example:  |
                        application/vnd.ez.api.View+xml
                        application/vnd.ez.api.View+json
                        application/vnd.ez.api.View+xml; version=1.1
                        application/vnd.ez.api.View+json; version=1.1
                Content-Type:
                    description: the view input in xml or json format
                    example:  |
                        application/vnd.ez.api.ViewInput+xml
                        application/vnd.ez.api.ViewInput+json
                        application/vnd.ez.api.ViewInput+xml; version=1.1
                        application/vnd.ez.api.ViewInput+json; version=1.1
            responses:
                301:
                    description: Moved permanently
                400:
                    description: Error - the Input does not match the input schema definition, In this case the response contains an ErrorMessage
        get:
            description: Returns a list of view uris. The list includes public view and private view of the authenticated user.
            headers:
                Accept:
                    description: the view link list in xml or json format
                    example:  |
                        application/vnd.ez.api.RefList+xml
                        application/vnd.ez.api.RefList+json
            responses:
                200:
                    description: OK - list of view uris
        /{identifier}:
            get:
                description: Returns the view
                headers:
                    Accept:
                        description: the view excluding results in xml or json format
                        example:  |
                            application/vnd.ez.api.View+xml
                            application/vnd.ez.api.View+json
                responses:
                    200:
                        description: OK - returns the view
                    401:
                        description: Error - the view is not public and from another user
            delete:
                description: the given view is deleted
                responses:
                    204:
                        description: No content - 	the given view is deleted
                    401:
                        description: Error - the user is not authorized to delete this view
                    404:
                        description: Error - the view does not exist
            /results:
                get:
                    description: Returns result of the view
                    headers:
                        Accept:
                            description: the view excluding results in xml or json format
                            example:  |
                                application/vnd.ez.api.ViewResult+xml
                                application/vnd.ez.api.ViewResult+json
                    responses:
                        200:
                            description: OK - result of the view
                        401:
                            description: Error - the view is not public and from another user
    /sections:
        post:
            description: Creates a new section
            headers:
                Accept:
                    description: if set the new section is returned in xml or json format
                    example:  |
                        application/vnd.ez.api.Section+xml
                        application/vnd.ez.api.Section+json
                Content-Type:
                    description: the Section input schema encoded in xml or json
                    example:  |
                        application/vnd.ez.api.SectionInput+json
                        application/vnd.ez.api.SectionInput+xml
            body:
                application/vnd.ez.api.Section+xml:
                    schema:
                    example: |
                        <?xml version="1.0" encoding="UTF-8"?>
                        <SectionInput>
                          <identifier>restricted</identifier>
                          <name>Restricted</name>
                        </SectionInput>
            responses:
                201:
                    body:
                        application/vnd.ez.api.Section+xml:
                            example:  |
                                <?xml version="1.0" encoding="UTF-8"?>
                                <Section href="/content/sections/5" media-type="application/vnd.ez.api.Section+xml">
                                  <sectionId>5</sectionId>
                                  <identifier>restricted</identifier>
                                  <name>Restricted</name>
                                </Section>
        get:
            description: Returns a list of all sections
            queryParameters:
                identifer:
                    description: only the section with the given identifier is returned.
            headers:
                Accept:
                    description: if set the section list is returned in xml or json format
                    example:  |
                        application/vnd.ez.api.SectionList+xml
                        application/vnd.ez.api.SectionList+json
                If-None-Match:
                    description: ETag
            responses:
                200:
                    body:
                        application/vnd.ez.api.SectionList+xml:
                            example:  |
                                <?xml version="1.0" encoding="UTF-8"?>
                                <SectionList href="/content/sections" media-type="application/vnd.ez.api.SectionList+xml">
                                  <Section href="/content/sections/1" media-type="application/vnd.ez.api.Section+xml">
                                    <sectionId>1</sectionId>
                                    <identifier>standard</identifier>
                                    <name>Standard</name>
                                  </Section>
                                  <Section href="/content/sections/2" media-type="application/vnd.ez.api.Section+xml">
                                    <sectionId>2</sectionId>
                                    <identifier>users</identifier>
                                    <name>Users</name>
                                  </Section>
                                  <Section href="/content/sections/3" media-type="application/vnd.ez.api.Section+xml">
                                    <sectionId>3</sectionId>
                                    <identifier>media</identifier>
                                    <name>Media</name>
                                  </Section>
                                  <Section href="/content/sections/4" media-type="application/vnd.ez.api.Section+xml">
                                    <sectionId>4</sectionId>
                                    <identifier>setup</identifier>
                                    <name>Setup</name>
                                  </Section>
                                </SectionList>
                401:
                    description: Error - Iif the user has no permission to read the sections
        /{contentId}:
            get:
                description: Returns the section given by ID
                headers:
                    Accept:
                        description: if set the section is returned in xml or json format
                        example:  |
                            application/vnd.ez.api.Section+xml
                            application/vnd.ez.api.Section+json
                    If-None-match:
                        description: ETag
                responses:
                    200:
                        body:
                            application/vnd.ez.api.Section+xml:
                                example:  |
                                    <?xml version="1.0" encoding="UTF-8"?>
                                    <Section href="/content/sections/3" media-type="application/vnd.ez.api.Section+xml">
                                      <sectionId>3</sectionId>
                                      <identifier>media</identifier>
                                      <name>Media</name>
                                    </Section>
                    401:
                        description: Error - the user is not authorized to read this section
                    404:
                        description: Error - the section does not exist
            patch:
                description: Updates a section. PATCH or POST with header X-HTTP-Method-Override PATCH
                headers:
                    Accept:
                        description: if set the updated section is returned in xml or json format
                        example:  |
                            application/vnd.ez.api.Section+xml
                            application/vnd.ez.api.Section+json
                    Content-Type:
                        description: the Section input schema encoded in xml or json
                        example:  |
                            application/vnd.ez.api.SectionInput+xml
                            application/vnd.ez.api.SectionInput+json
                    If-Match:
                        description: ETag
                responses:
                    200:
                        description: OK - section updated
                    400:
                        description: Error - the Input does not match the input schema definition, In this case the response contains an ErrorMessage
                    401:
                       description: Error - the user is not authorized to create this section
                    403:
                       description: Error - a section with the given new identifier already exists
                    412:
                       description: Error - the current ETag does not match with the provided one in the If-Match header
            delete:
                description: the given section is deleted
                headers:
                    Accept:
                        description: if set in the case of an error the error message is returned in xml or json format
                        example:  |
                            application/vnd.ez.api.ErrorMessage+xml
                            application/vnd.ez.api.ErrorMessage+json
                responses:
                    204:
                        description: No content - given section is deleted
                    401:
                        description: Error - the user is not authorized to delete this section
                    404:
                        description: Error - the section does not exist
/views:
    post:
        description: executes a query and returns view including the results The View input reflects the criteria model of the public API
        headers:
            Accept:
                description: the view in xml or json format
                example:  |
                    application/vnd.ez.api.View+xml
                    application/vnd.ez.api.View+json
                    application/vnd.ez.api.View+xml; version=1.1
                    application/vnd.ez.api.View+json; version=1.1
            Content-Type:
                description: the view input in xml or json format
                example:  |
                    application/vnd.ez.api.ViewInput+xml
                    application/vnd.ez.api.ViewInput+json
                    application/vnd.ez.api.ViewInput+xml; version=1.1
                    application/vnd.ez.api.ViewInput+json; version=1.1
        body:
            application/vnd.ez.api.View+xml; version=1.1:
                schema:
                example:  |
                    <?xml version="1.0" encoding="UTF-8"?>
                    <ViewInput>
                      <identifier>TitleView</identifier>
                      <ContentQuery>
                        <Filter>
                          <ContentTypeIdentifierCriterion>image</ContentTypeIdentifierCriterion>
                          <SectionIdentifierCriterion>media</SectionIdentifierCriterion>
                        </Filter>
                        <limit>10</limit>
                        <offset>0</offset>
                        <SortClauses>
                          <ContentName>ascending</ContentName>
                        </SortClauses>
                        <FacetBuilders>
                          <contentTypeFacetBuilder/>
                        </FacetBuilders>
                      </ContentQuery>
                    </ViewInput>
        responses:
            200:
                body:
                    application/vnd.ez.api.View+xml; version=1.1:
                        schema:
                        example:  |
                            <?xml version="1.0" encoding="UTF-8"?>
                            <View href="/views/TitleView" media-type="application/vnd.ez.api.View+xml; version=1.1">
                              <identifier>TitleView</identifier>
                              <User href="/user/users/14" media-type="vnd.ez.api.User+xml"/>
                              <public>false</public>
                              <LocationQuery>
                                <Filter>
                                  <ParentLocationIdCriterion>2</ParentLocationIdCriterion>
                                </Filter>
                                <limit>10</limit>
                                <offset>0</offset>
                                <SortClauses>
                                  <ContentName>ascending</ContentName>
                                </SortClauses>
                                <FacetBuilders>
                                  <contentTypeFacetBuilder/>
                                </FacetBuilders>
                              </LocationQuery>
                              <Result href="/content/views/view1234/results"
                                media-type="application/vnd.ez.api.ViewResult+xml" count="34" time="31" maxScore="1.0">
                                <searchHits>
                                  <searchHit score="1.0" index="installid1234567890">
                                    <hightlight/>
                                    <value>
                                      <Location media-type="application/vnd.ez.api.Location+xml" href="/api/ezp/v2/content/locations/1/2">
                                        <id>2</id>
                                        <priority>0</priority>
                                        <hidden>false</hidden>
                                        <invisible>false</invisible>
                                        <ParentLocation media-type="application/vnd.ez.api.Location+xml" href="/api/ezp/v2/content/locations/1"/>
                                        <pathString>/1/2/</pathString>
                                        <depth>1</depth>
                                        <childCount>8</childCount>
                                        <remoteId>f3e90596361e31d496d4026eb624c983</remoteId>
                                        <Children media-type="application/vnd.ez.api.LocationList+xml" href="/api/ezp/v2/content/locations/1/2/children"/>
                                        <Content media-type="application/vnd.ez.api.Content+xml" href="/api/ezp/v2/content/objects/57"/>
                                        <sortField>PRIORITY</sortField>
                                        <sortOrder>ASC</sortOrder>
                                        <UrlAliases media-type="application/vnd.ez.api.UrlAliasRefList+xml" href="/api/ezp/v2/content/locations/1/2/urlaliases"/>
                                      </Location>

                                    </value>
                                  </searchHit>
                                  ....
                                </searchHits>
                                <facets>
                                  <contentTypeFacet>
                                    <contentTypeFacetEntry>
                                      <contentType href="/content/types/1"  media-type="application/vnd.ez.api.ContentType+xml"/>
                                      <count>3</count>
                                    </contentTypeFacetEntry>
                                    <contentTypeFacetEntry>
                                      <contentType href="/content/types/7"  media-type="application/vnd.ez.api.ContentType+xml"/>
                                      <count>9</count>
                                    </contentTypeFacetEntry>
                                    <contentTypeFacetEntry>
                                      <contentType href="/content/types/11"  media-type="application/vnd.ez.api.ContentType+xml"/>
                                      <count>1</count>
                                    </contentTypeFacetEntry>
                                    <contentTypeFacetEntry>
                                      <contentType href="/content/types/15"  media-type="application/vnd.ez.api.ContentType+xml"/>
                                      <count>8</count>
                                    </contentTypeFacetEntry>
                                  </contentTypeFacet>
                                </facets>
                              </Result>
                            </View>
             400:
                description: Error - the Input does not match the input schema definition, In this case the response contains an ErrorMessage
/user:
    /groups:
        get:
            description: Load user groups for either an id or remoteId or role.
            queryParameters:
                roleId:
                    description: lists user groups assigned to the given role
                id:
                    description: retrieves the user group for the given ID
                remoteID:
                    description: retrieves the user group for the given remoteId
            headers:
                Accept:
                    description: UserGroupList - if set the user group list is returned in xml or json format. UserGroupRefList - if set the link list of user groups is returned in xml or json format
                    example:  |
                        application/vnd.ez.api.UserGroupList+xml
                        application/vnd.ez.api.UserGroupList+json
                        application/vnd.ez.api.UserGroupRefList+xml
                        application/vnd.ez.api.UserGroupRefList+json
            responses:
                200:
                    body:
                        application/vnd.ez.api.UserGroup+xml:
                            example:  |
                                <?xml version="1.0" encoding="UTF-8"?>
                                <UserGroup href="/user/groups/1/5" id="5" media-type="application/vnd.ez.api.UserGroup+xml" remoteId="remoteId-qwert001">
                                  <ContentType href="/content/types/5" media-type="application/vnd.ez.api.ContentType+xml" />
                                  <name>Users</name>
                                  <Versions href="/content/objects/4/versions" media-type="application/vnd.ez.api.VersionList+xml" />
                                  <Section href="/content/sections/4" media-type="application/vnd.ez.api.Section+xml" />
                                  <MainLocation href="/content/locations/1/5" media-type="application/vnd.ez.api.Location+xml" />
                                  <Locations href="/content/objects/4/locations" media-type="application/vnd.ez.api.LocationList+xml" />
                                  <Owner href="/user/users/13" media-type="application/vnd.ez.api.User+xml" />
                                  <publishDate>2011-02-31T16:00:00</publishDate>
                                  <lastModificationDate>2011-02-31T16:00:00</lastModificationDate>
                                  <mainLanguageCode>eng-UK</mainLanguageCode>
                                  <alwaysAvailable>true</alwaysAvailable>
                                  <Content>
                                    <VersionInfo>
                                      <id>22</id>
                                      <versionNo>1</versionNo>
                                      <status>PUBLISHED</status>
                                      <modificationDate>2011-02-31T16:00:00</modificationDate>
                                      <Creator href="/user/users/14" media-type="application/vnd.ez.api.User+xml" />
                                      <creationDate>2011-02-31T16:00:00</creationDate>
                                      <initialLanguageCode>eng-UK</initialLanguageCode>
                                      <Content href="/content/objects/4" media-type="application/vnd.ez.api.ContentInfo+xml" />
                                    </VersionInfo>
                                    <Fields>
                                      <field>
                                        <id>1234</id>
                                        <fieldDefinitionIdentifier>name</fieldDefinitionIdentifier>
                                        <languageCode>eng-UK</languageCode>
                                        <fieldValue>Users</fieldValue>
                                      </field>
                                      <field>
                                        <id>1235</id>
                                        <fieldDefinitionIdentifier>description</fieldDefinitionIdentifier>
                                        <languageCode>eng-UK</languageCode>
                                        <fieldValue>Main Group</fieldValue>
                                      </field>
                                    </Fields>
                                    <Relations />
                                  </Content>
                                  <SubGroups href="/user/groups/1/5/subgroups" media-type="application/vnd.ez.api.UserGroupList+xml"/>
                                  <Users href="/user/groups/1/5/users" media-type="application/vnd.ez.api.UserList+xml"/>
                                  <Roles href="/user/groups/1/5/roles" media-type="application/vnd.ez.api.RoleList+xml"/>
                                </UserGroup>
                401:
                    description: Error - the user has no permission to read user groups
        /root:
            get:
                description: Redirects to the root user group
                responses:
                    301:
                        description: Moved permanently.
        /{path}:
            get:
                description: loads user groups for the given {path}
                headers:
                    Accept:
                        description: if set the new user group is returned in xml or json format
                        example:  |
                            application/vnd.ez.api.UserGroup+xml
                            application/vnd.ez.api.UserGroup+json
                    If-None-Match:
                        description: ETag
                responses:
                    200:
                        description: OK - loads user groups
                    401:
                       description: Error - the user has no permission to read user groups
                    404:
                       description: Error -	if the user group does not exist
            patch:
                description: Updates a user group - PATCH or POST with header X-HTTP-Method-Override PATCH
                headers:
                    Accept:
                        description: if set the new user group is returned in xml or json forma
                        example:  |
                            application/vnd.ez.api.UserGroup+xml
                            application/vnd.ez.api.UserGroup+json
                    Content-Type:
                        description: the UserGroupUpdate schema encoded in xml or json
                        example:  |
                            application/vnd.ez.api.UserGroupUpdate+json
                            application/vnd.ez.api.UserGroupUpdate+xml
                    If-Match:
                        description: Causes to patch only if the specified etag is the current one. Otherwise a 412 is returned.
                        example: ETag
                responses:
                    200:
                       description: OK - updated user group
                    400:
                       description: Error - the Input does not match the input schema definition, In this case the response contains an ErrorMessage
                    401:
                       description: Error - the user is not authorized to update the user group
                    412:
                       description: Error -	if the current ETag does not match with the provided one in the If-Match header
            delete:
                description: the given user group is deleted
                responses:
                    204:
                       description: No content - the given user group is deleted
                    401:
                       description: Error - the user is not authorized to delete this content type
                    403:
                       description: Error - the user group is not empty
            move:
                description: moves the user group to another parent. MOVE or POST with header X-HTTP-Method-Override MOVE
                headers:
                    Destination:
                        description: A parent group resource to which the location is moved
                responses:
                    201:
                       description: Created - moves the user group to another parent
                    401:
                       description: Error - the user is not authorized to update the user group
                    403:
                       description: Error - the new parent does not exist
                    404:
                       description: Error - the user group does not exist
            /users:
                post:
                    description: Creates a new user in the given group
                    headers:
                        Accept:
                            description: if set the new user is returned in xml or json format
                            example:  |
                                application/vnd.ez.api.User+xml
                                application/vnd.ez.api.User+json
                        Content-Type:
                            description: the UserCreate schema encoded in xml or json
                            example:  |
                                application/vnd.ez.api.UserCreate+json
                                application/vnd.ez.api.UserCreate+xml
                    body:
                        application/vnd.ez.api.User+xml:
                            schema:
                            example:  |
                                <?xml version="1.0" encoding="UTF-8"?>
                                <UserCreate>
                                  <mainLanguageCode>eng-US</mainLanguageCode>
                                  <remoteId>remoteId-qwert426</remoteId>
                                  <login>john</login>
                                  <email>john.doe@example.net</email>
                                  <password>john-does-password</password>
                                  <fields>
                                    <field>
                                      <fieldDefinitionIdentifier>first_name</fieldDefinitionIdentifier>
                                      <languageCode>eng-US</languageCode>
                                      <fieldValue>John</fieldValue>
                                    </field>
                                    <field>
                                      <fieldDefinitionIdentifier>last_name</fieldDefinitionIdentifier>
                                      <languageCode>eng-US</languageCode>
                                      <fieldValue>Doe</fieldValue>
                                    </field>
                                  </fields>
                                </UserCreate>
                    responses:
                        body:
                            201:
                                application/vnd.ez.api.User+xml:
                                    example:  |
                                        <?xml version="1.0" encoding="UTF-8"?>
                                        <User href="/user/users/99" id="99" media-type="application/vnd.ez.api.User+xml"
                                          remoteId="remoteId-qwert426">
                                          <ContentType href="/content/types/4" media-type="application/vnd.ez.api.ContentType+xml" />
                                          <name>John</name>
                                          <Versions href="/content/objects/79" media-type="application/vnd.ez.api.VersionList+xml" />
                                          <Section href="/content/section/3" media-type="application/vnd.ez.api.Section+xml" />
                                          <MainLocation href="/content/locations/1/5/65"
                                            media-type="application/vnd.ez.api.Location+xml" />
                                          <Locations href="/content/objects/79/locations" media-type="application/vnd.ez.api.LocationList+xml" />
                                          <Owner href="/user/users/14" media-type="application/vnd.ez.api.User+xml" />
                                          <publishDate>2001-04-01T12:00:00</publishDate>
                                          <lastModificationDate>2001-04-01T12:00:00</lastModificationDate>
                                          <mainLanguageCode>eng-US</mainLanguageCode>
                                          <alwaysAvailable>true</alwaysAvailable>
                                          <login>john</login>
                                          <email>john.doe@example.net</email>
                                          <enabled>true</enabled>
                                          <Content>
                                            <VersionInfo>
                                              <id>1243</id>
                                              <versionNo>1</versionNo>
                                              <status>PUBLISHED</status>
                                              <modificationDate>2001-04-01T12:00:00</modificationDate>
                                              <Creator href="/user/users/14" media-type="application/vnd.ez.api.User+xml" />
                                              <creationDate>2001-04-01T12:00:00</creationDate>
                                              <initialLanguageCode>eng-UK</initialLanguageCode>
                                              <Content href="/content/objects/79" media-type="application/vnd.ez.api.ContentInfo+xml" />
                                            </VersionInfo>
                                            <fields>
                                              <field>
                                                <fieldDefinitionIdentifier>first_name</fieldDefinitionIdentifier>
                                                <languageCode>eng-US</languageCode>
                                                <fieldValue>John</fieldValue>
                                              </field>
                                              <field>
                                                <fieldDefinitionIdentifier>last_name</fieldDefinitionIdentifier>
                                                <languageCode>eng-US</languageCode>
                                                <fieldValue>Doe</fieldValue>
                                              </field>
                                            </fields>
                                          </Content>
                                          <Roles href="/user/users/99/roles" media-type="application/vnd.ez.api.RoleAssignmentList+xml" />
                                          <UserGroups href="/user/users/99/group" media-type="vns.ez.api.UserGroupRefList+xml" />
                                        </User>
                            400:
                                description: Error - the Input does not match the input schema definition, In this case the response contains an ErrorMessage
                            401:
                                description: Error - the user is not authorized to create this user
                            403:
                                description: Error - a user with the same login already exists
                            404:
                                description: Error - the group with the given ID does not exist
            /subgroups:
                post:
                    description: Creates a new user group under the given parent. To create a top level group use /user/groups/subgroups
                    headers:
                        Accept:
                            description: if set the new user group is returned in xml or json format
                            example:  |
                                application/vnd.ez.api.UserGroup+xml
                                application/vnd.ez.api.UserGroup+json
                        Content-Type:
                            description: the UserGroupCreate schema encoded in xml or json
                            example:  |
                                application/vnd.ez.api.UserGroupCreate+json
                                application/vnd.ez.api.UserGroupCreate+xml
                    body:
                        application/vnd.ez.api.UserGroup+xml:
                            schema:
                            example:  |
                                <?xml version="1.0" encoding="UTF-8"?>
                                <UserGroupCreate>
                                  <mainLanguageCode>eng-US</mainLanguageCode>
                                  <remoteId>remoteId-qwert098</remoteId>
                                  <fields>
                                    <field>
                                      <fieldDefinitionIdentifier>name</fieldDefinitionIdentifier>
                                      <languageCode>eng-US</languageCode>
                                      <fieldValue>UserGroup</fieldValue>
                                    </field>
                                    <field>
                                      <fieldDefinitionIdentifier>description</fieldDefinitionIdentifier>
                                      <languageCode>eng-US</languageCode>
                                      <fieldValue>This is the description of the user group</fieldValue>
                                    </field>
                                  </fields>
                                </UserGroupCreate>
                    responses:
                        201:
                            body:
                                application/vnd.ez.api.UserGroup+xml:
                                    example:  |
                                        <?xml version="1.0" encoding="UTF-8"?>
                                        <UserGroup href="/user/groups/1/5/65" id="65" media-type="application/vnd.ez.api.UserGroup+xml" remoteId="remoteId-qwert543">
                                          <ContentType href="/content/types/5" media-type="application/vnd.ez.api.ContentType+xml" />
                                          <name>UserGroup</name>
                                          <Versions href="/content/objects/123/versions" media-type="application/vnd.ez.api.VersionList+xml" />
                                          <Section href="/content/sections/4" media-type="application/vnd.ez.api.Section+xml" />
                                          <MainLocation href="/content/locations/1/5/65" media-type="application/vnd.ez.api.Location+xml" />
                                          <Locations href="/content/objects/123/locations" media-type="application/vnd.ez.api.LocationList+xml" />
                                          <Owner href="/user/users/13" media-type="application/vnd.ez.api.User+xml" />
                                          <publishDate>2012-02-31T16:00:00</publishDate>
                                          <lastModificationDate>2012-02-31T16:00:00</lastModificationDate>
                                          <mainLanguageCode>eng-UK</mainLanguageCode>
                                          <alwaysAvailable>true</alwaysAvailable>
                                          <Content>
                                            <VersionInfo>
                                              <id>123</id>
                                              <versionNo>2</versionNo>
                                              <status>PUBLISHED</status>
                                              <modificationDate>2012-02-31T16:00:00</modificationDate>
                                              <Creator href="/user/users/14" media-type="application/vnd.ez.api.User+xml" />
                                              <creationDate>2012-02-31T16:00:00</creationDate>
                                              <initialLanguageCode>eng-UK</initialLanguageCode>
                                              <Content href="/content/objects/123" media-type="application/vnd.ez.api.ContentInfo+xml" />
                                            </VersionInfo>
                                            <Fields>
                                              <field>
                                                <id>1234</id>
                                                <fieldDefinitionIdentifier>name</fieldDefinitionIdentifier>
                                                <languageCode>eng-UK</languageCode>
                                                <fieldValue>UserGroup</fieldValue>
                                              </field>
                                              <field>
                                                <id>1235</id>
                                                <fieldDefinitionIdentifier>description</fieldDefinitionIdentifier>
                                                <languageCode>eng-UK</languageCode>
                                                <fieldValue>This is the description of the user group</fieldValue>
                                              </field>
                                            </Fields>
                                            <Relations />
                                          </Content>
                                          <ParentUserGroup href="/user/groups/1/5" media-type="application/vnd.ez.api.UserGroup+xml" />
                                          <SubGroups href="/user/groups/1/5/65/subgroups" media-type="application/vnd.ez.api.UserGroupList+xml"/>
                                          <Users href="/user/groups/1/5/65/users" media-type="application/vnd.ez.api.UserList+xml"/>
                                          <Roles href="/user/groups/1/5/65/roles" media-type="application/vnd.ez.api.RoleList+xml"/>
                                        </UserGroup>
                        400:
                            description: Error - the Input does not match the input schema definition, In this case the response contains an ErrorMessage
                        401:
                            description: Error - the user is not authorized to create this user group
            /roles:
                get:
                    description: Returns a list of all roles assigned to the given user group
                    headers:
                        Accept:
                            description: if set the role assignment list is returned in xml or json format
                            example:  |
                                application/vnd.ez.api.RoleAssignmentList+xml
                                application/vnd.ez.api.RoleAssignmentList+json
                    responses:
                        200:
                            body:
                                application/vnd.ez.api.RoleAssignmentList+xml:
                                    example:  |
                                        <?xml version="1.0" encoding="UTF-8"?>
                                        <RoleAssignmentList href="/user/groups/1/5/65/roles" media-type="application/vnd.ez.api.RoleAssignmentList+xml">
                                          <RoleAssignment href="/user/groups/1/5/65/roles/5" media-type="application/vnd.ez.api.RoleAssignment+xml">
                                            <Role href="/user/roles/5" media-type="application/vnd.ez.api.Role+xml"/>
                                          </RoleAssignment>
                                          <RoleAssignment href="/user/groups/1/5/65/roles/7" media-type="application/vnd.ez.api.RoleAssignment+xml">
                                            <limitation identifier="Subtree">
                                              <values>
                                                  <ref href="/content/locations/1/23/88" media-type="application/vnd.ez.api.Location+xml" />
                                                  <ref href="/content/locations/1/32/67" media-type="application/vnd.ez.api.Location+xml" />
                                              </values>
                                            </limitation>
                                            <Role href="/user/roles/7" media-type="application/vnd.ez.api.Role+xml"/>
                                          </RoleAssignment>
                                        </RoleAssignmentList>
                        400:
                            description: Error - the user has no permission to read roles
                post:
                    description: assign a role to a user group.
                    headers:
                        Accept:
                            description: if set the updated role assignment list is returned in xml or json format
                            example:  |
                                application/vnd.ez.api.RoleAssignmentList+xml
                                application/vnd.ez.api.RoleAssignmentList+json
                        Content-Type:
                            description: the RoleAssignInput schema encoded in json or xml
                            example:  |
                                application/vnd.ez.api.RoleAssignInput+json
                                application/vnd.ez.api.RoleAssignInput+xml
                    body:
                        application/vnd.ez.api.RoleAssignmentList+xml:
                            schema:
                        application/vnd.ez.api.RoleAssignmentList+xml:
                            example:  |
                                <?xml version="1.0" encoding="UTF-8"?>
                                <RoleAssignInput>
                                  <Role href="/user/role/11" media-type="application/vnd.ez.api.RoleAssignInput+xml"/>
                                  <limitation identifier="Section">
                                      <values>
                                          <ref href="/content/sections/1" media-type="application/vnd.ez.api.Section+xml" />
                                          <ref href="/content/sections/4" media-type="application/vnd.ez.api.Section+xml" />
                                      </values>
                                  </limitation>
                                </RoleAssignInput>
                    responses:
                        200:
                            body:
                                application/vnd.ez.api.RoleAssignmentList+xml:
                                    example:  |
                                        <?xml version="1.0" encoding="UTF-8"?>
                                        <RoleAssignmentList href="/user/groups/1/5/65/roles" media-type="application/vnd.ez.api.RoleAssignmentList+xml">
                                          <RoleAssignment href="/user/groups/1/5/65/roles/5" media-type="application/vnd.ez.api.RoleAssignment+xml">
                                            <Role href="/user/roles/5" media-type="application/vnd.ez.api.Role+xml"/>
                                          </RoleAssignment>
                                          <RoleAssignment href="/user/groups/1/5/65/roles/7" media-type="application/vnd.ez.api.RoleAssignment+xml">
                                            <limitation identifier="Subtree">
                                              <values>
                                                  <ref href="/content/locations/1/23/88" media-type="application/vnd.ez.api.Location+xml" />
                                                  <ref href="/content/locations/1/32/67" media-type="application/vnd.ez.api.Location+xml" />
                                              </values>
                                            </limitation>
                                            <Role href="/user/roles/7" media-type="application/vnd.ez.api.Role+xml"/>
                                          </RoleAssignment>
                                          <RoleAssignment href="/user/groups/1/5/65/roles/11" media-type="application/vnd.ez.api.RoleAssignment+xml">
                                            <limitation identifier="Section">
                                              <values>
                                                  <ref href="/content/sections/1" media-type="application/vnd.ez.api.Section+xml" />
                                                  <ref href="/content/sections/4" media-type="application/vnd.ez.api.Section+xml" />
                                              </values>
                                            </limitation>
                                            <Role href="/user/roles/11" media-type="application/vnd.ez.api.Role+xml"/>
                                          </RoleAssignment>
                                        </RoleAssignmentList>
                        400:
                            description: Error - validation of limitation in RoleAssignInput fails
                        401:
                            description: Error - the user is not authorized to assign this role
                /{id}:
                    get:
                        description: Returns a roleassignment to the given user group
                        headers:
                            Accept:
                                description: if set the role assignment list is returned in xml or json format
                                example:  |
                                    application/vnd.ez.api.RoleAssignment+xml
                                    application/vnd.ez.api.RoleAssignment+json
                        responses:
                            200:
                                description: OK
                            401:
                                description: Error - the user has no permission to read roles
                    delete:
                        description: the given role is removed from the user or user group
                        headers:
                            Accept:
                                description: if set the updated role assignment list is returned in xml or json format
                                example:  |
                                    application/vnd.ez.api.RoleAssignmentList+xml
                                    application/vnd.ez.api.RoleAssignmentList+json
                        responses:
                            200:
                                body:
                                    application/vnd.ez.api.RoleAssignmentList+xml:
                                        example:  |
                                            <?xml version="1.0" encoding="UTF-8"?>
                                            <RoleAssignmentList href="/user/groups/1/5/65/roles" media-type="application/vnd.ez.api.RoleAssignmentList+xml">
                                              <RoleAssignment href="/user/groups/1/5/65/roles/5" media-type="application/vnd.ez.api.RoleAssignment+xml">
                                                <Role href="/user/roles/5" media-type="application/vnd.ez.api.Role+xml"/>
                                              </RoleAssignment>
                                              <RoleAssignment href="/user/groups/1/5/65/roles/11" media-type="application/vnd.ez.api.RoleAssignment+xml">
                                                <limitation identifier="Section">
                                                  <values>
                                                      <ref href="/content/sections/1" media-type="application/vnd.ez.api.Section+xml" />
                                                      <ref href="/content/sections/4" media-type="application/vnd.ez.api.Section+xml" />
                                                  </values>
                                                </limitation>
                                                <Role href="/user/roles/11" media-type="application/vnd.ez.api.Role+xml"/>
                                              </RoleAssignment>
                                            </RoleAssignmentList>
                            401:
                                description: Error - the user is not authorized to delete this content type
        /{id}/users:
            get:
                description: loads the users of the group with the given ID
                queryParameters:
                    limit:
                        description: only 'limit' items will be returned started by offset
                    offset:
                        description: offset of the result set
                headers:
                    Accept:
                    description: UserList - if set the user list returned in xml or json format. UserRefList - if set the link list of users returned in xml or json format
                    example:  |
                        application/vnd.ez.api.UserList+xml
                        application/vnd.ez.api.UserList+json
                        application/vnd.ez.api.UserRefList+xml
                        application/vnd.ez.api.UserRefList+json
                responses:
                    200:
                        description: OK - the users of the group with the given ID
                    401:
                       description: Error - the user has no permission to read user groups
                    404:
                       description: Error - the user group does not exist
        /{id}/subgroups:
            get:
                description: Returns a list of the sub groups
                queryParameters:
                    limit:
                        description: the number of locations returned
                    offset:
                        description: the offset of the result set
                headers:
                    Accept:
                        description: UserGroupList - if set the user group list returned in xml or json format. UserGroupRefList - if set the link list of user groups is returned in xml or json format
                        example:  |
                            application/vnd.ez.api.UserGroupList+xml
                            application/vnd.ez.api.UserGroupList+json
                            application/vnd.ez.api.UserGroupRefList+xml
                            application/vnd.ez.api.UserGroupRefList+json
                responses:
                    200:
                        description: OK - list of the sub groups
                    401:
                       description: Error - the user has no permission to read user groups
                    404:
                       description: Error - the user group does not exist
    /users:
        get:
            description: Load users either for a given remoteId or role
            queryParameters:
                roleId:
                    description: lists users assigned to the given role (ex: GET /user/users?roleId=/user/roles/1)
                remoteId:
                    description: retrieves the user for the given remoteId (ex: GET /user/users?remoteId=55dd9713db75145f374bbd0b4f60ad29)
                login:
                    description: retrieves the user for the given login (ex: GET /user/users?login=editor)
                email:
                    description: lists users with the given email (ex: GET /user/users?email=editor@example.com)
            headers:
                Accept:
                    description: UserList - if set the user list returned in xml or json format. UserRefList - if set the link list of users returned in xml or json format
                    example:  |
                        application/vnd.ez.api.UserList+xml
                        application/vnd.ez.api.UserList+json
                        application/vnd.ez.api.UserRefList+xml
                        application/vnd.ez.api.UserRefList+json
            responses:
                200:
                    description: OK - Loads users either for a given remoteId or role
                404:
                    description: If there are no visibile users matching the filter
        head:
            description: Verifies if there are users matching the given filter.
            queryParameters:
                roleId:
                    description: lists users assigned to the given role (ex: GET /user/users?roleId=/user/roles/1)
                remoteId:
                    description: retrieves the user for the given remoteId (ex: GET /user/users?remoteId=55dd9713db75145f374bbd0b4f60ad29)
                login:
                    description: retrieves the user for the given login (ex: GET /user/users?login=editor)
                email:
                    description: lists users with the given email (ex: GET /user/users?email=editor@example.com)
            responses:
                200:
                    description: OK
                404:
                    description: Error - there are no visibile users matching the filter
        /{id}:
            get:
                description: loads the users of the group with the given ID
                headers:
                    Accept:
                      description: if set the new user is returned in xml or json format
                      example:  |
                          application/vnd.ez.api.User+xml
                          application/vnd.ez.api.User+json
                    If-None-Match:
                        description: ETag
                responses:
                    200:
                       description: OK - the users of the group with the given ID
                    401:
                        description: Error - the user has no permission to read users
                    404:
                        description: Error - the user does not exist
            patch:
                description: Updates a user
                headers:
                    Accept:
                        description: if set the new user is returned in xml or json format
                        example:  |
                            application/vnd.ez.api.User+xml
                            application/vnd.ez.api.User+json
                    Content-Type:
                        description: the UserUpdate schema encoded in xml or json
                        example:  |
                            application/vnd.ez.api.UserUpdate+json
                            application/vnd.ez.api.UserUpdate+xml
                    If-Match:
                        description: Causes to patch only if the specified etag is the current one. Otherwise a 412 is returned.
                        example: ETag
                responses:
                    200:
                        description: OK
                    400:
                        description: Error - the Input does not match the input schema definition, In this case the response contains an ErrorMessage
                    401:
                        description: Error - the user is not authorized to update the user
                    404:
                        description: Error - the user does not exist
                    412:
                        description: Error - the current ETag does not match with the provided one in the If-Match header
            delete:
                description: the given user is deleted
                responses:
                    204:
                        description: No Content
                    401:
                        description: Error - the user is not authorized to delete this user
                    403:
                        description: Error - the user is the same as the authenticated user
                    404:
                        description: Error - the user does not exist
            /groups:
                get:
                    description: Returns a list of user groups the user belongs to. The returned list includes the resources for unassigning a user group if the user is in multiple groups.
                    queryParameters:
                       offset:
                            description: the offset of the result set
                            type: integer
                       limit:
                            description: the number of locations returned
                            type: integer
                    headers:
                        Accept:
                            description: if set the link list of user groups is returned in xml or json format
                            example:  |
                                application/vnd.ez.api.UserGroupRefList+xml
                                application/vnd.ez.api.UserGroupRefList+json
                    responses:
                        200:
                            body:
                                application/vnd.ez.api.UserGroupRefList:
                                    example:  |
                                        <?xml version="1.0" encoding="UTF-8"?>
                                        <UserGroupRefList href="/user/users/45/groups"
                                          media-type="application/vnd.ez.api.UserGroupRefList">
                                          <UserGroup href="/user/groups/1/5/34" media-type="application/vnd.ez.api.UserGroup">
                                            <unassign href="/user/users/45/groups/34" method="DELETE" />
                                          </UserGroup>
                                          <UserGroup href="/user/groups/1/5/78" media-type="application/vnd.ez.api.UserGroup">
                                            <unassign href="/user/users/45/groups/78" method="DELETE" />
                                          </UserGroup>
                                        </UserGroupRefList>
                        401:
                            description: Error - the user has no permission to read user groups
                        404:
                          description: Error - the user does not exist
                post:
                    description: Assigns the user to a user group
                    queryParameters:
                        group:
                            description: the new parent group resource of the user
                    headers:
                        Accept:
                            description: if set the link list of user groups is returned in xml or json format
                            example:  |
                                application/vnd.ez.api.UserGroupRefList+xml
                                application/vnd.ez.api.UserGroupRefList+json
                    responses:
                        200:
                            body:
                                application/vnd.ez.api.UserGroupRefList:
                                    example:  |
                                        <?xml version="1.0" encoding="UTF-8"?>
                                        <UserGroupRefList href="/user/users/45/groups"
                                          media-type="application/vnd.ez.api.UserGroupRefList">
                                          <UserGroup href="/user/groups/1/5/34" media-type="application/vnd.ez.api.UserGroup">
                                            <unassign href="/user/users/45/groups/34" method="DELETE" />
                                          </UserGroup>
                                          <UserGroup href="/user/groups/1/5/78" media-type="application/vnd.ez.api.UserGroup">
                                            <unassign href="/user/users/45/groups/78" method="DELETE" />
                                          </UserGroup>
                                          <UserGroup href="/user/groups/1/5/88" media-type="application/vnd.ez.api.UserGroup">
                                            <unassign href="/user/users/45/groups/88" method="DELETE" />
                                          </UserGroup>
                                        </UserGroupRefList>
                        401:
                            description: Error - the user is not authorized to assign user groups
                        403:
                            description: Error - the new user group does not exist or the user is already in this group
                        404:
                            description: Error - the user does not exist
                delete:
                    description: Unassigns the user from a user group
                    headers:
                        Accept:
                            description: if set the link list of user groups is returned in xml or json format
                            example: |
                                application/vnd.ez.api.UserGroupRefList+xml
                                application/vnd.ez.api.UserGroupRefList+json
                    responses:
                        200:
                            body:
                                application/vnd.ez.api.UserGroupRefList:
                                    example:  |
                                        <?xml version="1.0" encoding="UTF-8"?>
                                        <UserGroupRefList href="/user/users/45/groups"
                                          media-type="application/vnd.ez.api.UserGroupRefList">
                                          <UserGroup href="/user/groups/1/5/34" media-type="application/vnd.ez.api.UserGroup">
                                            <unassign href="/user/users/45/groups/34" method="DELETE" />
                                          </UserGroup>
                                          <UserGroup href="/user/groups/1/5/88" media-type="application/vnd.ez.api.UserGroup">
                                            <unassign href="/user/users/45/groups/88" method="DELETE" />
                                          </UserGroup>
                                        </UserGroupRefList>
                        401:
                            description: Error - the user is not authorized to unassign user groups
                        403:
                            description: Error - the user is not in the given group
                        404:
                            description: Error - the user does not exist
            /roles:
                get:
                    description: Returns a list of all roles assigned to the given user
                    headers:
                        Accept:
                            description: if set the role assignment list is returned in xml or json format
                            example:  |
                                application/vnd.ez.api.RoleAssignmentList+xml
                                application/vnd.ez.api.RoleAssignmentList+json
                    responses:
                        200:
                            body:
                                application/vnd.ez.api.RoleAssignmentList+xml:
                                    example:  |
                                        <?xml version="1.0" encoding="UTF-8"?>
                                        <RoleAssignmentList href="/user/groups/1/5/65/roles" media-type="application/vnd.ez.api.RoleAssignmentList+xml">
                                          <RoleAssignment href="/user/groups/1/5/65/roles/5" media-type="application/vnd.ez.api.RoleAssignment+xml">
                                            <Role href="/user/roles/5" media-type="application/vnd.ez.api.Role+xml"/>
                                          </RoleAssignment>
                                          <RoleAssignment href="/user/groups/1/5/65/roles/7" media-type="application/vnd.ez.api.RoleAssignment+xml">
                                            <limitation identifier="Subtree">
                                              <values>
                                                  <ref href="/content/locations/1/23/88" media-type="application/vnd.ez.api.Location+xml" />
                                                  <ref href="/content/locations/1/32/67" media-type="application/vnd.ez.api.Location+xml" />
                                              </values>
                                            </limitation>
                                            <Role href="/user/roles/7" media-type="application/vnd.ez.api.Role+xml"/>
                                          </RoleAssignment>
                                        </RoleAssignmentList>
                        400:
                            description: Error - the user has no permission to read roles
                post:
                    description: assigns a role to a user.
                    headers:
                        Accept:
                            description: if set the updated role assignment list is returned in xml or json format
                            example:  |
                                application/vnd.ez.api.RoleAssignmentList+xml
                                application/vnd.ez.api.RoleAssignmentList+json
                        Content-Type:
                            description: the RoleAssignInput schema encoded in json or xml
                            example:  |
                                application/vnd.ez.api.RoleAssignInput+json
                                application/vnd.ez.api.RoleAssignInput+xml
                    body:
                        application/vnd.ez.api.RoleAssignmentList+xml:
                            schema:
                        application/vnd.ez.api.RoleAssignmentList+xml:
                            example:  |
                                <?xml version="1.0" encoding="UTF-8"?>
                                <RoleAssignInput>
                                  <Role href="/user/role/11" media-type="application/vnd.ez.api.RoleAssignInput+xml"/>
                                  <limitation identifier="Section">
                                      <values>
                                          <ref href="/content/sections/1" media-type="application/vnd.ez.api.Section+xml" />
                                          <ref href="/content/sections/4" media-type="application/vnd.ez.api.Section+xml" />
                                      </values>
                                  </limitation>
                                </RoleAssignInput>
                    responses:
                        200:
                            body:
                                application/vnd.ez.api.RoleAssignmentList+xml:
                                    example:  |
                                        <?xml version="1.0" encoding="UTF-8"?>
                                        <RoleAssignmentList href="/user/groups/1/5/65/roles" media-type="application/vnd.ez.api.RoleAssignmentList+xml">
                                          <RoleAssignment href="/user/groups/1/5/65/roles/5" media-type="application/vnd.ez.api.RoleAssignment+xml">
                                            <Role href="/user/roles/5" media-type="application/vnd.ez.api.Role+xml"/>
                                          </RoleAssignment>
                                          <RoleAssignment href="/user/groups/1/5/65/roles/7" media-type="application/vnd.ez.api.RoleAssignment+xml">
                                            <limitation identifier="Subtree">
                                              <values>
                                                  <ref href="/content/locations/1/23/88" media-type="application/vnd.ez.api.Location+xml" />
                                                  <ref href="/content/locations/1/32/67" media-type="application/vnd.ez.api.Location+xml" />
                                              </values>
                                            </limitation>
                                            <Role href="/user/roles/7" media-type="application/vnd.ez.api.Role+xml"/>
                                          </RoleAssignment>
                                          <RoleAssignment href="/user/groups/1/5/65/roles/11" media-type="application/vnd.ez.api.RoleAssignment+xml">
                                            <limitation identifier="Section">
                                              <values>
                                                  <ref href="/content/sections/1" media-type="application/vnd.ez.api.Section+xml" />
                                                  <ref href="/content/sections/4" media-type="application/vnd.ez.api.Section+xml" />
                                              </values>
                                            </limitation>
                                            <Role href="/user/roles/11" media-type="application/vnd.ez.api.Role+xml"/>
                                          </RoleAssignment>
                                        </RoleAssignmentList>
                        400:
                            description: Error - validation of limitation in RoleAssignInput fails
                        401:
                            description: Error - the user is not authorized to assign this role
                /{id}:
                    get:
                        description: Returns a roleassignment to the given user group
                        headers:
                            Accept:
                                description: if set the role assignment list is returned in xml or json format
                                example:  |
                                    application/vnd.ez.api.RoleAssignment+xml
                                    application/vnd.ez.api.RoleAssignment+json
                        responses:
                            200:
                                description: OK
                            401:
                                description: Error - the user has no permission to read roles
                    delete:
                        description: the given role is removed from the user or user group
                        headers:
                            Accept:
                                description: if set the updated role assignment list is returned in xml or json format
                                example:  |
                                    application/vnd.ez.api.RoleAssignmentList+xml
                                    application/vnd.ez.api.RoleAssignmentList+json
                        responses:
                            200:
                                body:
                                    application/vnd.ez.api.RoleAssignmentList+xml:
                                        example:  |
                                            <?xml version="1.0" encoding="UTF-8"?>
                                            <RoleAssignmentList href="/user/groups/1/5/65/roles" media-type="application/vnd.ez.api.RoleAssignmentList+xml">
                                              <RoleAssignment href="/user/groups/1/5/65/roles/5" media-type="application/vnd.ez.api.RoleAssignment+xml">
                                                <Role href="/user/roles/5" media-type="application/vnd.ez.api.Role+xml"/>
                                              </RoleAssignment>
                                              <RoleAssignment href="/user/groups/1/5/65/roles/11" media-type="application/vnd.ez.api.RoleAssignment+xml">
                                                <limitation identifier="Section">
                                                  <values>
                                                      <ref href="/content/sections/1" media-type="application/vnd.ez.api.Section+xml" />
                                                      <ref href="/content/sections/4" media-type="application/vnd.ez.api.Section+xml" />
                                                  </values>
                                                </limitation>
                                                <Role href="/user/roles/11" media-type="application/vnd.ez.api.Role+xml"/>
                                              </RoleAssignment>
                                            </RoleAssignmentList>
                            401:
                                description: Error - the user is not authorized to delete this content type
    /roles:
        get:
            description: Returns a list of all roles
            queryParameters:
                identifier:
                    description: Restricts the result to a list containing the role with the given identifier. If the role is not found an empty list is returned.
                offset:
                    description: the offset of the result set
                    type: integer
                limit:
                    description: only limit items will be returned started by offset
                    type: integer
            headers:
                Accept:
                    description: if set the user list returned in xml or json format
                    example:  |
                        application/vnd.ez.api.RoleList+xml
                        application/vnd.ez.api.RoleList+json
            responses:
                200:
                    description: OK
                401:
                    description: Error - the user has no permission to read roles
        post:
            description: Creates a new role or role draft
            headers:
                Accept:
                    description: if set the new user is returned in xml or json format
                    example:  |
                        application/vnd.ez.api.Role+xml
                        application/vnd.ez.api.Role+json
                        application/vnd.ez.api.RoleDraft+xml
                        application/vnd.ez.api.RoleDraft+json
                Content-Type:
                    description: the RoleInput schema encoded in xml or json
                    example:  |
                        application/vnd.ez.api.RoleInput+json
                        application/vnd.ez.api.RoleInput+xml
            body:
                 application/vnd.ez.api.Role+xml:
                    schema:
                 application/vnd.ez.api.Role+xml:
                    example:  |
                        <?xml version="1.0" encoding="UTF-8"?>
                        <RoleInput>
                          <identifier>NewRole</identifier>
                        </RoleInput>
            responses:
                201:
                    body:
                        application/vnd.ez.api.Role+xml:
                            example:  |
                                <?xml version="1.0" encoding="UTF-8"?>
                                <Role href="/user/roles/11" media-type="application/vnd.ez.api.Role+xml">
                                  <identifier>NewRole</identifier>
                                  <Policies href="/user/roles/11/policies" media-type="application/vnd.ez.api.PolicyList+xml"/>
                                </Role>
                400:
                    description: Error - the Input does not match the input schema definition, In this case the response contains an ErrorMessage
                401:
                    description: Error - the user is not authorized to create this role / role draft
        /{id}:
            get:
                description: loads a role for the given ID
                headers:
                    Accept:
                        description: if set the user list returned in xml or json format (see Role)
                        example:  |
                            application/vnd.ez.api.Role+xml
                            application/vnd.ez.api.Role+json
                    If-None-Match:
                        description: ETag
                responses:
                    200:
                        description: OK
                    401:
                        description: Error - the user has no permission to read roles
                    404:
                        description: Error - the role does not exist
            post:
                description: Creates a new role draft from an existing role.
                headers:
                    Accept:
                        description: if set the new user is returned in xml or json format
                        example:  |
                            application/vnd.ez.api.Role+xml
                            application/vnd.ez.api.Role+json
                    Content-Type:
                        description: the RoleInput schema encoded in xml or json
                        example:  |
                            application/vnd.ez.api.RoleInput+json
                            application/vnd.ez.api.RoleInput+xml
                body:
                    application/vnd.ez.api.Role+xml:
                        schema:
                    application/vnd.ez.api.RoleDraft+xml:
                        example:  |
                            <?xml version="1.0" encoding="UTF-8"?>
                            <RoleInput>
                              <identifier>MyRole</identifier>
                            </RoleInput>
                responses:
                    201:
                        body:
                            application/vnd.ez.api.RoleDraft+xml:
                                example:  |
                                    <?xml version="1.0" encoding="UTF-8"?>
                                    <Role href="/user/roles/11" media-type="application/vnd.ez.api.RoleDraft+xml">
                                      <identifier>MyRole</identifier>
                                      <Policies href="/user/roles/11/policies" media-type="application/vnd.ez.api.PolicyList+xml"/>
                                    </Role>
                    401:
                        description: Error - the user is not authorized to create this role / role draft
            patch:
                description: Updates a role. PATCH or POST with header X-HTTP-Method-Override PATCH
                headers:
                    Accept:
                        description: if set the new user is returned in xml or json format
                        example:  |
                            application/vnd.ez.api.Role+xml
                            application/vnd.ez.api.Role+json
                    Content-Type:
                        description: the RoleInput schema encoded in xml or json
                        example:  |
                            application/vnd.ez.api.RoleInput+json
                            application/vnd.ez.api.RoleInput+xml
                    If-Match:
                        description: ETag Causes to patch only if the specified etag is the current one. Otherwise a 412 is returned.
                    responses:
                        200:
                            description: OK
                        400:
                            description: Error - the Input does not match the input schema definition, In this case the response contains an ErrorMessage
                        401:
                            description: Error - the user is not authorized to update the role
                        412:
                            description: Error - the current ETag does not match with the provided one in the If-Match header
            delete:
                description: the given role and all assignments to users or user groups are deleted
                responses:
                    204:
                        description: No Content
                    401:
                        description: Error - the user is not authorized to delete this role
            /draft:
                get:
                    description: loads a role draft by original role ID
                    headers:
                        Accept:
                            description: if set the user list returned in xml or json format
                            example:  |
                                application/vnd.ez.api.Role+xml
                                application/vnd.ez.api.Role+json
                        If-None-Match:
                            description: ETag
                    responses:
                        200:
                            description: OK
                        401:
                            description: Error - the user has no permission to read roles
                        404:
                            description: Error - there is no draft or role with the given ID
                patch:
                    description: Updates a role draft. PATCH or POST with header X-HTTP-Method-Override PATCH
                    headers:
                        Accept:
                            description: if set the updated role is returned in xml or json format
                            example:  |
                                application/vnd.ez.api.Role+xml
                                application/vnd.ez.api.Role+json
                        Content-Type:
                            description: the RoleInput schema encoded in xml or json
                            example:  |
                                application/vnd.ez.api.RoleInput+json
                                application/vnd.ez.api.RoleInput+xml
                        If-Match:
                            description: ETag Causes to patch only if the specified etag is the current one. Otherwise a 412 is returned.
                    responses:
                        200:
                            description: OK
                        400:
                            description: Error - the Input does not match the input schema definition, In this case the response contains an ErrorMessage
                        401:
                            description: Error - the user is not authorized to update the role
                        404:
                            description: Error - there is no draft or role with the given ID
                        412:
                            description: Error - the current ETag does not match with the provided one in the If-Match header
                publish:
                    description: Publishes a role draft. PUBLISH or POST with header X-HTTP-Method-Override PUBLISH
                    responses:
                        204:
                            description: No Content
                        401:
                            description: Error - the user is not authorized to publish this content type draft
                        403:
                            description: Error - the content type draft is not complete e.g. there is no field definition provided
                        404:
                            description: Error - there is no draft or role with the given ID
                delete:
                    description: The given role draft is deleted.
                    responses:
                        204:
                            description: No Content
                        401:
                            description: Error - the user is not authorized to delete this role
            /policies:
                get:
                    description: loads policies for the given role
                    headers:
                        Accept:
                            description: if set the policy list is returned in xml or json format
                            example:  |
                                application/vnd.ez.api.PolicyList+xml
                                application/vnd.ez.api.PolicyList+json
                    responses:
                        200:
                            body:
                                application/vnd.ez.api.PolicyList:
                                    example:  |
                                        <?xml version="1.0" encoding="UTF-8"?>
                                        <PolicyList href="/user/roles/11/policies" media-type="application/vnd.ez.api.PolicyList">
                                          <Policy href="/user/roles/11/policies/45" media-type="application/vnd.ez.api.Policy+xml">
                                            <id>45</id>
                                            <module>content</module>
                                            <function>create</function>
                                            <limitations>
                                              <limitation identifier="Class">
                                                <values>
                                                  <ref href="/content/types/10" media-type="application/vnd.ez.api.ContentType+xml" />
                                                  <ref href="/content/types/11" media-type="application/vnd.ez.api.ContentType+xml" />
                                                  <ref href="/content/types/12" media-type="application/vnd.ez.api.ContentType+xml" />
                                                </values>
                                              </limitation>
                                              <limitation identifier="ParentClass">
                                                <values>
                                                  <ref href="/content/types/4" media-type="application/vnd.ez.api.ContentType+xml" />
                                                </values>
                                              </limitation>
                                            </limitations>
                                          </Policy>
                                          <Policy href="/user/roles/11/policies/49" media-type="application/vnd.ez.api.Policy+xml">
                                            <id>49</id>
                                            <module>content</module>
                                            <function>read</function>
                                            <limitations>
                                              <limitation identifier="Section">
                                                <values>
                                                  <ref href="/content/sections/1" media-type="application/vnd.ez.api.Section+xml" />
                                                  <ref href="/content/sections/2" media-type="application/vnd.ez.api.Section+xml" />
                                                  <ref href="/content/sections/4" media-type="application/vnd.ez.api.Section+xml" />
                                                </values>
                                              </limitation>
                                            </limitations>
                                          </Policy>
                                        </PolicyList>
                        401:
                            description: Error - the user has no permission to read roles
                        404:
                            description: Error - the role does not exist
                delete:
                    description: all policies of the given role are deleted
                    responses:
                        204:
                            description: No Content - all policies of the given role are deleted
                        401:
                            description: Error - the user is not authorized to delete this content type
                post:
                    description: creates a policy
                    headers:
                        Accept:
                            description: if set the updated policy is returned in xml or json format
                            example:  |
                                application/vnd.ez.api.Policy+xml
                                application/vnd.ez.api.Policy+json
                        Content-Type:
                            description: if set the updated policy is returned in xml or json format
                            example: |
                                application/vnd.ez.api.PolicyCreate+xml
                                application/vnd.ez.api.PolicyCreate+json
                    body:
                        application/vnd.ez.api.Policy+xml:
                            scheam: |
                        application/vnd.ez.api.PolicyCreate+xml:
                            example:  |
                                <?xml version="1.0" encoding="UTF-8"?>
                                <PolicyCreate>
                                  <module>content</module>
                                  <function>create</function>
                                  <limitations>
                                    <limitation identifier="Class">
                                      <values>
                                        <ref href="/content/types/13"/>
                                      </values>
                                    </limitation>
                                    <limitation identifier="ParentClass">
                                      <values>
                                        <ref href="/content/types/12"/>
                                      </values>
                                    </limitation>
                                  </limitations>
                                </PolicyCreate>
                    responses:
                        201:
                            body:
                                application/vnd.ez.api.Policy+xml:
                                    example:  |
                                        <Policy href="/user/roles/11/policies/55" media-type="application/vnd.ez.api.Policy+xml">
                                          <id>55</id>
                                          <module>content</module>
                                          <function>create</function>
                                          <limitations>
                                            <limitation identifier="Class">
                                              <values>
                                                <ref href="/content/types/13"/>
                                              </values>
                                            </limitation>
                                            <limitation identifier="ParentClass">
                                              <values>
                                                <ref href="/content/types/12"/>
                                              </values>
                                            </limitation>
                                          </limitations>
                                         </Policy>
                        400:
                            description: Error - the Input does not match the input schema definition, In this case the response contains an ErrorMessage OR validation of limitation in PolicyCreate fails
                        401:
                            description: Error - the user is not authorized to create the policy
                        404:
                            description: Error - the role does not exist
                patch:
                    description: Updates a policy. PATCH or POST with header X-HTTP-Method-Override PATCH
                    headers:
                        Accept:
                            description: if set the updated policy is returned in xml or json format
                            example:  |
                                application/vnd.ez.api.Policy+xml
                                application/vnd.ez.api.Policy+json
                        Content-Type:
                            description: if set the updated policy is returned in xml or json format
                            example:  |
                                application/vnd.ez.api.PolicyUpdate+xml
                                application/vnd.ez.api.PolicyUpdate+json
                        If-Match:
                            description: Causes to patch only if the specified etag is the current one. Otherwise a 412 is returned.
                            example: ETag
                    body:
                        application/vnd.ez.api.Policy+xml:
                            schema:
                        application/vnd.ez.api.Policy+xml:
                            example:  |
                                <?xml version="1.0" encoding="UTF-8"?>
                                <PolicyUpdate>
                                  <limitations>
                                    <limitation identifier="Class">
                                      <values>
                                        <ref href="/content/types/14"/>
                                      </values>
                                    </limitation>
                                    <limitation identifier="ParentClass">
                                      <values>
                                        <ref href="/content/types/10"/>
                                      </values>
                                    </limitation>
                                  </limitations>
                                </PolicyUpdate>
                    responses:
                        200:
                            body:
                                application/vnd.ez.api.Policy+xml:
                                    example:  |
                                        <Policy href="/user/roles/11/policies/55" media-type="application/vnd.ez.api.Policy+xml">
                                          <id>55</id>
                                          <module>content</module>
                                          <function>create</function>
                                          <limitations>
                                            <limitation identifier="Class">
                                              <values>
                                                <ref href="/content/types/14"/>
                                              </values>
                                            </limitation>
                                            <limitation identifier="ParentClass">
                                              <values>
                                                <ref href="/content/types/10"/>
                                              </values>
                                            </limitation>
                                          </limitations>
                                         </Policy>
                        400:
                            description: Error - the Input does not match the input schema definition, In this case the response contains an ErrorMessage OR validation of limitation in PolicyUpdate fails
                        401:
                            description: Error - the user is not authorized to update the policy
                        404:
                            description: Error - the role does not exist
                        412:
                            description: Error - the current ETag does not match with the provided one in the If-Match header
                /{id}:
                    get:
                        description: loads a policy for the given module and function
                        headers:
                            Accept:
                                description: if set the policy is returned in xml or json format
                                example:  |
                                    application/vnd.ez.api.Policy+xml
                                    application/vnd.ez.api.Policy+json
                            If-None-Match:
                                description: ETag
                        responses:
                            200:
                                body:
                                    application/vnd.ez.api.Policy+xml:
                                        example:  |
                                            <Policy href="/user/roles/11/policies/45" media-type="application/vnd.ez.api.Policy+xml">
                                              <id>45</id>
                                              <module>content</module>
                                              <function>create</function>
                                              <limitations>
                                                <limitation identifier="Class">
                                                  <values>
                                                    <ref href="/content/types/10" media-type="application/vnd.ez.api.ContentType+xml" />
                                                    <ref href="/content/types/11" media-type="application/vnd.ez.api.ContentType+xml" />
                                                    <ref href="/content/types/12" media-type="application/vnd.ez.api.ContentType+xml" />
                                                  </values>
                                                </limitation>
                                                <limitation identifier="ParentClass">
                                                  <values>
                                                    <ref href="/content/types/4" media-type="application/vnd.ez.api.ContentType+xml" />
                                                  </values>
                                                </limitation>
                                              </limitations>
                                            </Policy>
                            401:
                                description: Error - the user has no permission to read roles
                            404:
                                description: Error - the role or policy does not exist
                    delete:
                        description: the given policy is deleted
                        responses:
                            204:
                                description: No Content - the given policy is deleted
                            401:
                                description: Error - the user is not authorized to delete this content type
                            404:
                                description: Error - the role or policy does not exist
    /policies:
        get:
            description: search all policies which are applied to a given user
            queryParameters:
                userId:
                    description: the user id
            headers:
                Accept:
                    description: if set the policy list is returned in xml or json format
                    example:  |
                        application/vnd.ez.api.PolicyList+xml
                        application/vnd.ez.api.PolicyList+json
            responses:
                200:
                    description: OK
                401:
                    description: Error - the user has no permission to read roles
    /sessions:
        post:
            description: Performs a login for the user or check if session exists and returns the session and session cookie. The client will need to remember both session name/id and CSRF token as this is for security reasons not exposed via GET.
            headers:
                Accept:
                    description: if set the Session is returned in xml or json format
                    example:  |
                        application/vnd.ez.api.Session+xml
                        application/vnd.ez.api.Session+json
                Content-Type:
                    description: the SessionInput schema encoded in xml or json
                    example:  |
                        application/vnd.ez.api.SessionInput+xml
                        application/vnd.ez.api.SessionInput+json
                Cookie:
                    description: (only needed for session's checking) {sessionName}={sessionID}
                X-CSRF-Token:
                    description: (only needed for session's checking) The {csrfToken} needed on all unsafe http methods with session.
            body:
                application/vnd.ez.api.Session+xml:
                    schema:
                application/vnd.ez.api.Session+xml (session's creation):
                    example:  |
                        <?xml version="1.0" encoding="UTF-8"?>
                        <SessionInput>
                          <login>admin</login>
                          <password>secret</password>
                        </SessionInput>
                application/vnd.ez.api.Session+json (session's creation):
                    example:  |
                        {
                          "SessionInput": {
                            "login": "admin",
                            "password": "secret"
                          }
                        }
                application/vnd.ez.api.Session+xml (log in with active session):
                    example:  |
                        <?xml version="1.0" encoding="UTF-8"?>
                        <SessionInput>
                          <login>admin</login>
                          <password>secret</password>
                        </SessionInput>
                application/vnd.ez.api.Session+json:
                    example:  |
                        {
                          "SessionInput": {
                            "login": "admin",
                            "password": "secret"
                          }
                        }
            responses:
                200:
                    description: If session already exists
                    body:
                        application/vnd.ez.api.Session+xml:
                            example:  |
                                <?xml version="1.0" encoding="UTF-8"?>
                                <Session href="user/sessions/go327ij2cirpo59pb6rrv2a4el2/refresh" media-type="application/vnd.ez.api.Session+xml">
                                  <name>eZSSID</name>
                                  <identifier>go327ij2cirpo59pb6rrv2a4el2</identifier>
                                  <csrfToken>23lkneri34ijajedfw39orj3j93</csrfToken>
                                  <User href="/user/users/14" media-type="vnd.ez.api.User+xml"/>
                                </Session>
                        application/vnd.ez.api.Session+json:
                            example:  |
                                {
                                  "Session": {
                                    "name": "eZSSID",
                                    "identifier": "go327ij2cirpo59pb6rrv2a4el2",
                                    "csrfToken": "23lkneri34ijajedfw39orj3j93",
                                    "User": {
                                      "_href": "/user/users/14",
                                      "_media-type": "application/vnd.ez.api.User+json"
                                    }
                                  }
                                }
                201:
                    description: If session is created
                    body:
                        application/vnd.ez.api.Session+xml:
                            example:  |
                                <?xml version="1.0" encoding="UTF-8"?>
                                <Session href="/user/sessions/sessionID" media-type="application/vnd.ez.api.Session+xml">
                                  <name>eZSSID</name>
                                  <identifier>go327ij2cirpo59pb6rrv2a4el2</identifier>
                                  <csrfToken>23lkneri34ijajedfw39orj3j93</csrfToken>
                                  <User href="/user/users/14" media-type="vnd.ez.api.User+xml"/>
                                </Session>
                        application/vnd.ez.api.Session+json:
                            example:  |
                                {
                                  "Session": {
                                    "name": "eZSSID",
                                    "identifier": "go327ij2cirpo59pb6rrv2a4el2",
                                    "csrfToken": "23lkneri34ijajedfw39orj3j93",
                                    "User": {
                                      "_href": "/user/users/14",
                                      "_media-type": "application/vnd.ez.api.User+json"
                                    }
                                  }
                                }
                400:
                    description: Error - the Input does not match the input schema definition, In this case the response contains an ErrorMessage
                401:
                    description: Error - the authorization failed
                409:
                    description: Error - header contained a session cookie but different user was authorized
        /{sessionID}:
            delete:
                description: The user session is removed i.e. the user is logged out.
                headers:
                    Cookie:
                        description: {sessionName}={essionID}
                    X-CSRF-Token:
                        description: The {csrfToken} needed on all unsafe http methods with session.
                responses:
                    204:
                        body:
                            example:  |
                                HTTP/1.1 204 No Content
                                Set-Cookie: eZSSID=deleted; Expires=Thu, 01-Jan-1970 00:00:01 GMT; Path=/; Domain=.example.net; HttpOnly
                    404:
                        description: Error - the session does not exist
            /refresh:
                post:
                    description: Give the session's User information
                    headers:
                        Cookie:
                            description: {sessionName}={sessionID}
                        X-CSRF-Token:
                            description: The {csrfToken} needed on all unsafe http methods with session.
                    responses:
                        200:
                            body:
                                application/vnd.ez.api.Session+xml:
                                    example:  |
                                        <?xml version="1.0" encoding="UTF-8"?>
                                        <Session href="user/sessions/go327ij2cirpo59pb6rrv2a4el2/refresh" media-type="application/vnd.ez.api.Session+xml">
                                          <name>eZSSID</name>
                                          <identifier>go327ij2cirpo59pb6rrv2a4el2</identifier>
                                          <csrfToken>23lkneri34ijajedfw39orj3j93</csrfToken>
                                          <User href="/user/users/14" media-type="vnd.ez.api.User+xml"/>
                                        </Session>
                                application/vnd.ez.api.Session+json:
                                    example:  |
                                        {
                                          "Session": {
                                            "name": "eZSSID",
                                            "identifier": "go327ij2cirpo59pb6rrv2a4el2",
                                            "csrfToken": "23lkneri34ijajedfw39orj3j93",
                                            "User": {
                                              "_href": "/user/users/14",
                                              "_media-type": "application/vnd.ez.api.User+json"
                                            }
                                          }
                                        }
                        404:
                            description: Error - the session does not exist



